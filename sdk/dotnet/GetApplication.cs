// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Argocd
{
    public static class GetApplication
    {
        /// <summary>
        /// Reads an existing ArgoCD application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Argocd = Pulumi.Argocd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Argocd.GetApplication.Invoke(new()
        ///     {
        ///         Metadata = new Argocd.Inputs.GetApplicationMetadataInputArgs
        ///         {
        ///             Name = "foo",
        ///             Namespace = "argocd",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("argocd:index/getApplication:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Reads an existing ArgoCD application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Argocd = Pulumi.Argocd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Argocd.GetApplication.Invoke(new()
        ///     {
        ///         Metadata = new Argocd.Inputs.GetApplicationMetadataInputArgs
        ///         {
        ///             Name = "foo",
        ///             Namespace = "argocd",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("argocd:index/getApplication:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Reads an existing ArgoCD application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Argocd = Pulumi.Argocd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Argocd.GetApplication.Invoke(new()
        ///     {
        ///         Metadata = new Argocd.Inputs.GetApplicationMetadataInputArgs
        ///         {
        ///             Name = "foo",
        ///             Namespace = "argocd",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("argocd:index/getApplication:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
        /// </summary>
        [Input("metadata", required: true)]
        public Inputs.GetApplicationMetadataArgs Metadata { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
        public static new GetApplicationArgs Empty => new GetApplicationArgs();
    }

    public sealed class GetApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
        /// </summary>
        [Input("metadata", required: true)]
        public Input<Inputs.GetApplicationMetadataInputArgs> Metadata { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
        public static new GetApplicationInvokeArgs Empty => new GetApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        /// <summary>
        /// ArgoCD application identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
        /// </summary>
        public readonly Outputs.GetApplicationMetadataResult Metadata;
        /// <summary>
        /// The application specification.
        /// </summary>
        public readonly Outputs.GetApplicationSpecResult Spec;
        /// <summary>
        /// Status information for the application.
        /// </summary>
        public readonly Outputs.GetApplicationStatusResult Status;

        [OutputConstructor]
        private GetApplicationResult(
            string id,

            Outputs.GetApplicationMetadataResult metadata,

            Outputs.GetApplicationSpecResult spec,

            Outputs.GetApplicationStatusResult status)
        {
            Id = id;
            Metadata = metadata;
            Spec = spec;
            Status = status;
        }
    }
}
