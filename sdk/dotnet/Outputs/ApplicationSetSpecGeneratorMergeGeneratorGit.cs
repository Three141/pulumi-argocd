// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Three14.Argocd.Outputs
{

    [OutputType]
    public sealed class ApplicationSetSpecGeneratorMergeGeneratorGit
    {
        /// <summary>
        /// List of directories in the source repository to use when template the Application..
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationSetSpecGeneratorMergeGeneratorGitDirectory> Directories;
        /// <summary>
        /// List of files in the source repository to use when template the Application.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationSetSpecGeneratorMergeGeneratorGitFile> Files;
        /// <summary>
        /// Prefix for all path-related parameter names.
        /// </summary>
        public readonly string? PathParamPrefix;
        /// <summary>
        /// URL to the repository to use.
        /// </summary>
        public readonly string RepoUrl;
        /// <summary>
        /// Revision of the source repository to use.
        /// </summary>
        public readonly string? Revision;
        /// <summary>
        /// Generator template. Used to override the values of the spec-level template.
        /// </summary>
        public readonly Outputs.ApplicationSetSpecGeneratorMergeGeneratorGitTemplate? Template;
        /// <summary>
        /// Arbitrary string key-value pairs to pass to the template via the values field of the git generator.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Values;

        [OutputConstructor]
        private ApplicationSetSpecGeneratorMergeGeneratorGit(
            ImmutableArray<Outputs.ApplicationSetSpecGeneratorMergeGeneratorGitDirectory> directories,

            ImmutableArray<Outputs.ApplicationSetSpecGeneratorMergeGeneratorGitFile> files,

            string? pathParamPrefix,

            string repoUrl,

            string? revision,

            Outputs.ApplicationSetSpecGeneratorMergeGeneratorGitTemplate? template,

            ImmutableDictionary<string, string>? values)
        {
            Directories = directories;
            Files = files;
            PathParamPrefix = pathParamPrefix;
            RepoUrl = repoUrl;
            Revision = revision;
            Template = template;
            Values = values;
        }
    }
}
