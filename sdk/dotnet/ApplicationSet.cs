// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Argocd
{
    /// <summary>
    /// Manages [application sets](https://argo-cd.readthedocs.io/en/stable/user-guide/application-set/) within ArgoCD.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Argocd = Pulumi.Argocd;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Clusters Generator
    ///     var clustersSelector = new Argocd.ApplicationSet("clusters_selector", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "clusters-selector",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     Clusters = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorClusterArgs
    ///                         {
    ///                             Selector = new Argocd.Inputs.ApplicationSetSpecGeneratorClusterSelectorArgs
    ///                             {
    ///                                 MatchLabels = 
    ///                                 {
    ///                                     { "argocd.argoproj.io/secret-type", "cluster" },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{name}}-clusters-selector",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argocd-example-apps/",
    ///                             TargetRevision = "HEAD",
    ///                             Path = "guestbook",
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "{{server}}",
    ///                         Namespace = "default",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Cluster Decision Resource Generator
    ///     var clusterDecisionResource = new Argocd.ApplicationSet("cluster_decision_resource", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "cluster-decision-resource",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     ClusterDecisionResources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorClusterDecisionResourceArgs
    ///                         {
    ///                             ConfigMapRef = "my-configmap",
    ///                             Name = "quak",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{name}}-guestbook",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argocd-example-apps/",
    ///                             TargetRevision = "HEAD",
    ///                             Path = "guestbook",
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "{{server}}",
    ///                         Namespace = "default",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Git Generator - Directories
    ///     var gitDirectories = new Argocd.ApplicationSet("git_directories", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "git-directories",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     Gits = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorGitArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argo-cd.git",
    ///                             Revision = "HEAD",
    ///                             Directories = new[]
    ///                             {
    ///                                 new Argocd.Inputs.ApplicationSetSpecGeneratorGitDirectoryArgs
    ///                                 {
    ///                                     Path = "applicationset/examples/git-generator-directory/cluster-addons/*",
    ///                                 },
    ///                                 new Argocd.Inputs.ApplicationSetSpecGeneratorGitDirectoryArgs
    ///                                 {
    ///                                     Path = "applicationset/examples/git-generator-directory/excludes/cluster-addons/exclude-helm-guestbook",
    ///                                     Exclude = true,
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{path.basename}}-git-directories",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argo-cd.git",
    ///                             TargetRevision = "HEAD",
    ///                             Path = "{{path}}",
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "https://kubernetes.default.svc",
    ///                         Namespace = "{{path.basename}}",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Git Generator - Files
    ///     var gitFiles = new Argocd.ApplicationSet("git_files", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "git-files",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     Gits = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorGitArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argo-cd.git",
    ///                             Revision = "HEAD",
    ///                             Files = new[]
    ///                             {
    ///                                 new Argocd.Inputs.ApplicationSetSpecGeneratorGitFileArgs
    ///                                 {
    ///                                     Path = "applicationset/examples/git-generator-files-discovery/cluster-config/**/config.json",
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{cluster.name}}-git-files",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argo-cd.git",
    ///                             TargetRevision = "HEAD",
    ///                             Path = "applicationset/examples/git-generator-files-discovery/apps/guestbook",
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "{{cluster.address}}",
    ///                         Namespace = "guestbook",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // List Generator
    ///     var list = new Argocd.ApplicationSet("list", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "list",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     Lists = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorListArgs
    ///                         {
    ///                             Elements = new[]
    ///                             {
    ///                                 
    ///                                 {
    ///                                     { "cluster", "engineering-dev" },
    ///                                     { "url", "https://kubernetes.default.svc" },
    ///                                 },
    ///                                 
    ///                                 {
    ///                                     { "cluster", "engineering-prod" },
    ///                                     { "url", "https://kubernetes.default.svc" },
    ///                                     { "foo", "bar" },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{cluster}}-guestbook",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Project = "my-project",
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argo-cd.git",
    ///                             TargetRevision = "HEAD",
    ///                             Path = "applicationset/examples/list-generator/guestbook/{{cluster}}",
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "{{url}}",
    ///                         Namespace = "guestbook",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Matrix Generator
    ///     var matrix = new Argocd.ApplicationSet("matrix", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "matrix",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     Matrices = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorMatrixArgs
    ///                         {
    ///                             Generators = new[]
    ///                             {
    ///                                 new Argocd.Inputs.ApplicationSetSpecGeneratorMatrixGeneratorArgs
    ///                                 {
    ///                                     Gits = new[]
    ///                                     {
    ///                                         new Argocd.Inputs.ApplicationSetSpecGeneratorMatrixGeneratorGitArgs
    ///                                         {
    ///                                             RepoUrl = "https://github.com/argoproj/argo-cd.git",
    ///                                             Revision = "HEAD",
    ///                                             Directories = new[]
    ///                                             {
    ///                                                 new Argocd.Inputs.ApplicationSetSpecGeneratorMatrixGeneratorGitDirectoryArgs
    ///                                                 {
    ///                                                     Path = "applicationset/examples/matrix/cluster-addons/*",
    ///                                                 },
    ///                                             },
    ///                                         },
    ///                                     },
    ///                                 },
    ///                                 new Argocd.Inputs.ApplicationSetSpecGeneratorMatrixGeneratorArgs
    ///                                 {
    ///                                     Clusters = new[]
    ///                                     {
    ///                                         new Argocd.Inputs.ApplicationSetSpecGeneratorMatrixGeneratorClusterArgs
    ///                                         {
    ///                                             Selector = new Argocd.Inputs.ApplicationSetSpecGeneratorMatrixGeneratorClusterSelectorArgs
    ///                                             {
    ///                                                 MatchLabels = 
    ///                                                 {
    ///                                                     { "argocd.argoproj.io/secret-type", "cluster" },
    ///                                                 },
    ///                                             },
    ///                                         },
    ///                                     },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{path.basename}}-{{name}}",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Project = "default",
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argo-cd.git",
    ///                             TargetRevision = "HEAD",
    ///                             Path = "{{path}}",
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "{{server}}",
    ///                         Namespace = "{{path.basename}}",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Merge Generator
    ///     var merge = new Argocd.ApplicationSet("merge", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "merge",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     Merges = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorMergeArgs
    ///                         {
    ///                             MergeKeys = new[]
    ///                             {
    ///                                 "server",
    ///                             },
    ///                             Generators = new[]
    ///                             {
    ///                                 new Argocd.Inputs.ApplicationSetSpecGeneratorMergeGeneratorArgs
    ///                                 {
    ///                                     Clusters = new[]
    ///                                     {
    ///                                         new Argocd.Inputs.ApplicationSetSpecGeneratorMergeGeneratorClusterArgs
    ///                                         {
    ///                                             Values = 
    ///                                             {
    ///                                                 { "kafka", "true" },
    ///                                                 { "redis", "false" },
    ///                                             },
    ///                                         },
    ///                                     },
    ///                                 },
    ///                                 new Argocd.Inputs.ApplicationSetSpecGeneratorMergeGeneratorArgs
    ///                                 {
    ///                                     Clusters = new[]
    ///                                     {
    ///                                         new Argocd.Inputs.ApplicationSetSpecGeneratorMergeGeneratorClusterArgs
    ///                                         {
    ///                                             Selector = new Argocd.Inputs.ApplicationSetSpecGeneratorMergeGeneratorClusterSelectorArgs
    ///                                             {
    ///                                                 MatchLabels = 
    ///                                                 {
    ///                                                     { "use-kafka", "false" },
    ///                                                 },
    ///                                             },
    ///                                             Values = 
    ///                                             {
    ///                                                 { "kafka", "false" },
    ///                                             },
    ///                                         },
    ///                                     },
    ///                                 },
    ///                                 new Argocd.Inputs.ApplicationSetSpecGeneratorMergeGeneratorArgs
    ///                                 {
    ///                                     Lists = new[]
    ///                                     {
    ///                                         new Argocd.Inputs.ApplicationSetSpecGeneratorMergeGeneratorListArgs
    ///                                         {
    ///                                             Elements = new[]
    ///                                             {
    ///                                                 
    ///                                                 {
    ///                                                     { "server", "https://2.4.6.8" },
    ///                                                     { "values.redis", "true" },
    ///                                                 },
    ///                                             },
    ///                                         },
    ///                                     },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{name}}",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Project = "default",
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/argoproj/argo-cd.git",
    ///                             Path = "app",
    ///                             TargetRevision = "HEAD",
    ///                             Helm = new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceHelmArgs
    ///                             {
    ///                                 Parameters = new[]
    ///                                 {
    ///                                     new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceHelmParameterArgs
    ///                                     {
    ///                                         Name = "kafka",
    ///                                         Value = "{{values.kafka}}",
    ///                                     },
    ///                                     new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceHelmParameterArgs
    ///                                     {
    ///                                         Name = "redis",
    ///                                         Value = "{{values.redis}}",
    ///                                     },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "{{server}}",
    ///                         Namespace = "default",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Pull Request Generator - GitHub
    ///     var prGithub = new Argocd.ApplicationSet("pr_github", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "pr-github",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     PullRequests = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorPullRequestArgs
    ///                         {
    ///                             Github = new Argocd.Inputs.ApplicationSetSpecGeneratorPullRequestGithubArgs
    ///                             {
    ///                                 Api = "https://git.example.com/",
    ///                                 Owner = "myorg",
    ///                                 Repo = "myrepository",
    ///                                 AppSecretName = "github-app-repo-creds",
    ///                                 TokenRef = new Argocd.Inputs.ApplicationSetSpecGeneratorPullRequestGithubTokenRefArgs
    ///                                 {
    ///                                     SecretName = "github-token",
    ///                                     Key = "token",
    ///                                 },
    ///                                 Labels = new[]
    ///                                 {
    ///                                     "preview",
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "myapp-{{branch}}-{{number}}",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Project = "default",
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/myorg/myrepo.git",
    ///                             Path = "kubernetes/",
    ///                             TargetRevision = "{{head_sha}}",
    ///                             Helm = new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceHelmArgs
    ///                             {
    ///                                 Parameters = new[]
    ///                                 {
    ///                                     new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceHelmParameterArgs
    ///                                     {
    ///                                         Name = "image.tag",
    ///                                         Value = "pull-{{head_sha}}",
    ///                                     },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "https://kubernetes.default.svc",
    ///                         Namespace = "default",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // SCM Provider Generator - GitHub
    ///     var scmGithub = new Argocd.ApplicationSet("scm_github", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "scm-github",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     ScmProviders = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorScmProviderArgs
    ///                         {
    ///                             Github = new Argocd.Inputs.ApplicationSetSpecGeneratorScmProviderGithubArgs
    ///                             {
    ///                                 AppSecretName = "gh-app-repo-creds",
    ///                                 Organization = "myorg",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{repository}}",
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Project = "default",
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "{{url}}",
    ///                             Path = "kubernetes/",
    ///                             TargetRevision = "{{branch}}",
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "https://kubernetes.default.svc",
    ///                         Namespace = "default",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Progressive Sync - Rolling Update
    ///     var progressiveSync = new Argocd.ApplicationSet("progressive_sync", new()
    ///     {
    ///         Metadata = new Argocd.Inputs.ApplicationSetMetadataArgs
    ///         {
    ///             Name = "progressive-sync",
    ///         },
    ///         Spec = new Argocd.Inputs.ApplicationSetSpecArgs
    ///         {
    ///             Generators = new[]
    ///             {
    ///                 new Argocd.Inputs.ApplicationSetSpecGeneratorArgs
    ///                 {
    ///                     Lists = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecGeneratorListArgs
    ///                         {
    ///                             Elements = new[]
    ///                             {
    ///                                 
    ///                                 {
    ///                                     { "cluster", "engineering-dev" },
    ///                                     { "url", "https://1.2.3.4" },
    ///                                     { "env", "env-dev" },
    ///                                 },
    ///                                 
    ///                                 {
    ///                                     { "cluster", "engineering-qa" },
    ///                                     { "url", "https://2.4.6.8" },
    ///                                     { "env", "env-qa" },
    ///                                 },
    ///                                 
    ///                                 {
    ///                                     { "cluster", "engineering-prod" },
    ///                                     { "url", "https://9.8.7.6/" },
    ///                                     { "env", "env-prod" },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Strategy = new Argocd.Inputs.ApplicationSetSpecStrategyArgs
    ///             {
    ///                 Type = "RollingSync",
    ///                 RollingSyncs = new[]
    ///                 {
    ///                     new Argocd.Inputs.ApplicationSetSpecStrategyRollingSyncArgs
    ///                     {
    ///                         Steps = new[]
    ///                         {
    ///                             new Argocd.Inputs.ApplicationSetSpecStrategyRollingSyncStepArgs
    ///                             {
    ///                                 MatchExpressions = new[]
    ///                                 {
    ///                                     new Argocd.Inputs.ApplicationSetSpecStrategyRollingSyncStepMatchExpressionArgs
    ///                                     {
    ///                                         Key = "envLabel",
    ///                                         Operator = "In",
    ///                                         Values = new[]
    ///                                         {
    ///                                             "env-dev",
    ///                                         },
    ///                                     },
    ///                                 },
    ///                             },
    ///                             new Argocd.Inputs.ApplicationSetSpecStrategyRollingSyncStepArgs
    ///                             {
    ///                                 MatchExpressions = new[]
    ///                                 {
    ///                                     new Argocd.Inputs.ApplicationSetSpecStrategyRollingSyncStepMatchExpressionArgs
    ///                                     {
    ///                                         Key = "envLabel",
    ///                                         Operator = "In",
    ///                                         Values = new[]
    ///                                         {
    ///                                             "env-qa",
    ///                                         },
    ///                                     },
    ///                                 },
    ///                                 MaxUpdate = "0",
    ///                             },
    ///                             new Argocd.Inputs.ApplicationSetSpecStrategyRollingSyncStepArgs
    ///                             {
    ///                                 MatchExpressions = new[]
    ///                                 {
    ///                                     new Argocd.Inputs.ApplicationSetSpecStrategyRollingSyncStepMatchExpressionArgs
    ///                                     {
    ///                                         Key = "envLabel",
    ///                                         Operator = "In",
    ///                                         Values = new[]
    ///                                         {
    ///                                             "env-prod",
    ///                                         },
    ///                                     },
    ///                                 },
    ///                                 MaxUpdate = "10%",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             GoTemplate = true,
    ///             Template = new Argocd.Inputs.ApplicationSetSpecTemplateArgs
    ///             {
    ///                 Metadata = new Argocd.Inputs.ApplicationSetSpecTemplateMetadataArgs
    ///                 {
    ///                     Name = "{{.cluster}}-guestbook",
    ///                     Labels = 
    ///                     {
    ///                         { "envLabel", "{{.env}}" },
    ///                     },
    ///                 },
    ///                 Spec = new Argocd.Inputs.ApplicationSetSpecTemplateSpecArgs
    ///                 {
    ///                     Project = "default",
    ///                     Sources = new[]
    ///                     {
    ///                         new Argocd.Inputs.ApplicationSetSpecTemplateSpecSourceArgs
    ///                         {
    ///                             RepoUrl = "https://github.com/infra-team/cluster-deployments.git",
    ///                             Path = "guestbook/{{.cluster}}",
    ///                             TargetRevision = "HEAD",
    ///                         },
    ///                     },
    ///                     Destination = new Argocd.Inputs.ApplicationSetSpecTemplateSpecDestinationArgs
    ///                     {
    ///                         Server = "{{.url}}",
    ///                         Namespace = "guestbook",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [ArgocdResourceType("argocd:index/applicationSet:ApplicationSet")]
    public partial class ApplicationSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.ApplicationSetMetadata> Metadata { get; private set; } = null!;

        /// <summary>
        /// ArgoCD application set resource spec.
        /// </summary>
        [Output("spec")]
        public Output<Outputs.ApplicationSetSpec> Spec { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationSet(string name, ApplicationSetArgs args, CustomResourceOptions? options = null)
            : base("argocd:index/applicationSet:ApplicationSet", name, args ?? new ApplicationSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationSet(string name, Input<string> id, ApplicationSetState? state = null, CustomResourceOptions? options = null)
            : base("argocd:index/applicationSet:ApplicationSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/Three141/pulumi-argocd/releases/download/v${VERSION}/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationSet Get(string name, Input<string> id, ApplicationSetState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationSet(name, id, state, options);
        }
    }

    public sealed class ApplicationSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
        /// </summary>
        [Input("metadata", required: true)]
        public Input<Inputs.ApplicationSetMetadataArgs> Metadata { get; set; } = null!;

        /// <summary>
        /// ArgoCD application set resource spec.
        /// </summary>
        [Input("spec", required: true)]
        public Input<Inputs.ApplicationSetSpecArgs> Spec { get; set; } = null!;

        public ApplicationSetArgs()
        {
        }
        public static new ApplicationSetArgs Empty => new ApplicationSetArgs();
    }

    public sealed class ApplicationSetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.ApplicationSetMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// ArgoCD application set resource spec.
        /// </summary>
        [Input("spec")]
        public Input<Inputs.ApplicationSetSpecGetArgs>? Spec { get; set; }

        public ApplicationSetState()
        {
        }
        public static new ApplicationSetState Empty => new ApplicationSetState();
    }
}
