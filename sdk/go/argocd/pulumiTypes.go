// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package argocd

import (
	"context"
	"reflect"

	"github.com/Three141/pulumi-argocd/sdk/go/argocd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ProviderKubernetes struct {
	// PEM-encoded client certificate for TLS authentication. Can be sourced from `KUBE_CLIENT_CERT_DATA`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// PEM-encoded client certificate key for TLS authentication. Can be sourced from `KUBE_CLIENT_KEY_DATA`.
	ClientKey *string `pulumi:"clientKey"`
	// PEM-encoded root certificates bundle for TLS authentication. Can be sourced from `KUBE_CLUSTER_CA_CERT_DATA`.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// Context to choose from the config file. Can be sourced from `KUBE_CTX`.
	ConfigContext         *string `pulumi:"configContext"`
	ConfigContextAuthInfo *string `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  *string `pulumi:"configContextCluster"`
	// Configuration block to use an [exec-based credential plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins), e.g. call an external command to receive user credentials.
	Exec *ProviderKubernetesExec `pulumi:"exec"`
	// The hostname (in form of URI) of the Kubernetes API. Can be sourced from `KUBE_HOST`.
	Host *string `pulumi:"host"`
	// Whether server should be accessed without verifying the TLS certificate. Can be sourced from `KUBE_INSECURE`.
	Insecure *bool `pulumi:"insecure"`
	// The password to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_PASSWORD`.
	Password *string `pulumi:"password"`
	// Token to authenticate an service account. Can be sourced from `KUBE_TOKEN`.
	Token *string `pulumi:"token"`
	// The username to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_USER`.
	Username *string `pulumi:"username"`
}

// ProviderKubernetesInput is an input type that accepts ProviderKubernetesArgs and ProviderKubernetesOutput values.
// You can construct a concrete instance of `ProviderKubernetesInput` via:
//
//	ProviderKubernetesArgs{...}
type ProviderKubernetesInput interface {
	pulumi.Input

	ToProviderKubernetesOutput() ProviderKubernetesOutput
	ToProviderKubernetesOutputWithContext(context.Context) ProviderKubernetesOutput
}

type ProviderKubernetesArgs struct {
	// PEM-encoded client certificate for TLS authentication. Can be sourced from `KUBE_CLIENT_CERT_DATA`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// PEM-encoded client certificate key for TLS authentication. Can be sourced from `KUBE_CLIENT_KEY_DATA`.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// PEM-encoded root certificates bundle for TLS authentication. Can be sourced from `KUBE_CLUSTER_CA_CERT_DATA`.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// Context to choose from the config file. Can be sourced from `KUBE_CTX`.
	ConfigContext         pulumi.StringPtrInput `pulumi:"configContext"`
	ConfigContextAuthInfo pulumi.StringPtrInput `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  pulumi.StringPtrInput `pulumi:"configContextCluster"`
	// Configuration block to use an [exec-based credential plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins), e.g. call an external command to receive user credentials.
	Exec ProviderKubernetesExecPtrInput `pulumi:"exec"`
	// The hostname (in form of URI) of the Kubernetes API. Can be sourced from `KUBE_HOST`.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Whether server should be accessed without verifying the TLS certificate. Can be sourced from `KUBE_INSECURE`.
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// The password to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_PASSWORD`.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Token to authenticate an service account. Can be sourced from `KUBE_TOKEN`.
	Token pulumi.StringPtrInput `pulumi:"token"`
	// The username to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_USER`.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetes)(nil)).Elem()
}

func (i ProviderKubernetesArgs) ToProviderKubernetesOutput() ProviderKubernetesOutput {
	return i.ToProviderKubernetesOutputWithContext(context.Background())
}

func (i ProviderKubernetesArgs) ToProviderKubernetesOutputWithContext(ctx context.Context) ProviderKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesOutput)
}

func (i ProviderKubernetesArgs) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return i.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i ProviderKubernetesArgs) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesOutput).ToProviderKubernetesPtrOutputWithContext(ctx)
}

// ProviderKubernetesPtrInput is an input type that accepts ProviderKubernetesArgs, ProviderKubernetesPtr and ProviderKubernetesPtrOutput values.
// You can construct a concrete instance of `ProviderKubernetesPtrInput` via:
//
//	        ProviderKubernetesArgs{...}
//
//	or:
//
//	        nil
type ProviderKubernetesPtrInput interface {
	pulumi.Input

	ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput
	ToProviderKubernetesPtrOutputWithContext(context.Context) ProviderKubernetesPtrOutput
}

type providerKubernetesPtrType ProviderKubernetesArgs

func ProviderKubernetesPtr(v *ProviderKubernetesArgs) ProviderKubernetesPtrInput {
	return (*providerKubernetesPtrType)(v)
}

func (*providerKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetes)(nil)).Elem()
}

func (i *providerKubernetesPtrType) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return i.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i *providerKubernetesPtrType) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesPtrOutput)
}

type ProviderKubernetesOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetes)(nil)).Elem()
}

func (o ProviderKubernetesOutput) ToProviderKubernetesOutput() ProviderKubernetesOutput {
	return o
}

func (o ProviderKubernetesOutput) ToProviderKubernetesOutputWithContext(ctx context.Context) ProviderKubernetesOutput {
	return o
}

func (o ProviderKubernetesOutput) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return o.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (o ProviderKubernetesOutput) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderKubernetes) *ProviderKubernetes {
		return &v
	}).(ProviderKubernetesPtrOutput)
}

// PEM-encoded client certificate for TLS authentication. Can be sourced from `KUBE_CLIENT_CERT_DATA`.
func (o ProviderKubernetesOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM-encoded client certificate key for TLS authentication. Can be sourced from `KUBE_CLIENT_KEY_DATA`.
func (o ProviderKubernetesOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// PEM-encoded root certificates bundle for TLS authentication. Can be sourced from `KUBE_CLUSTER_CA_CERT_DATA`.
func (o ProviderKubernetesOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// Context to choose from the config file. Can be sourced from `KUBE_CTX`.
func (o ProviderKubernetesOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContext }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContextAuthInfo }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContextCluster }).(pulumi.StringPtrOutput)
}

// Configuration block to use an [exec-based credential plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins), e.g. call an external command to receive user credentials.
func (o ProviderKubernetesOutput) Exec() ProviderKubernetesExecPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *ProviderKubernetesExec { return v.Exec }).(ProviderKubernetesExecPtrOutput)
}

// The hostname (in form of URI) of the Kubernetes API. Can be sourced from `KUBE_HOST`.
func (o ProviderKubernetesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Whether server should be accessed without verifying the TLS certificate. Can be sourced from `KUBE_INSECURE`.
func (o ProviderKubernetesOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// The password to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_PASSWORD`.
func (o ProviderKubernetesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Token to authenticate an service account. Can be sourced from `KUBE_TOKEN`.
func (o ProviderKubernetesOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_USER`.
func (o ProviderKubernetesOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderKubernetesPtrOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetes)(nil)).Elem()
}

func (o ProviderKubernetesPtrOutput) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return o
}

func (o ProviderKubernetesPtrOutput) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return o
}

func (o ProviderKubernetesPtrOutput) Elem() ProviderKubernetesOutput {
	return o.ApplyT(func(v *ProviderKubernetes) ProviderKubernetes {
		if v != nil {
			return *v
		}
		var ret ProviderKubernetes
		return ret
	}).(ProviderKubernetesOutput)
}

// PEM-encoded client certificate for TLS authentication. Can be sourced from `KUBE_CLIENT_CERT_DATA`.
func (o ProviderKubernetesPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// PEM-encoded client certificate key for TLS authentication. Can be sourced from `KUBE_CLIENT_KEY_DATA`.
func (o ProviderKubernetesPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

// PEM-encoded root certificates bundle for TLS authentication. Can be sourced from `KUBE_CLUSTER_CA_CERT_DATA`.
func (o ProviderKubernetesPtrOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCaCertificate
	}).(pulumi.StringPtrOutput)
}

// Context to choose from the config file. Can be sourced from `KUBE_CTX`.
func (o ProviderKubernetesPtrOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContext
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContextAuthInfo
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContextCluster
	}).(pulumi.StringPtrOutput)
}

// Configuration block to use an [exec-based credential plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins), e.g. call an external command to receive user credentials.
func (o ProviderKubernetesPtrOutput) Exec() ProviderKubernetesExecPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *ProviderKubernetesExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ProviderKubernetesExecPtrOutput)
}

// The hostname (in form of URI) of the Kubernetes API. Can be sourced from `KUBE_HOST`.
func (o ProviderKubernetesPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Whether server should be accessed without verifying the TLS certificate. Can be sourced from `KUBE_INSECURE`.
func (o ProviderKubernetesPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// The password to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_PASSWORD`.
func (o ProviderKubernetesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Token to authenticate an service account. Can be sourced from `KUBE_TOKEN`.
func (o ProviderKubernetesPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing the Kubernetes API. Can be sourced from `KUBE_USER`.
func (o ProviderKubernetesPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderKubernetesExec struct {
	// API version to use when decoding the ExecCredentials resource, e.g. `client.authentication.k8s.io/v1beta1`.
	ApiVersion string `pulumi:"apiVersion"`
	// Map of environment variables to set when executing the plugin.
	Args []string `pulumi:"args"`
	// Command to execute.
	Command string `pulumi:"command"`
	// List of arguments to pass when executing the plugin.
	Env map[string]string `pulumi:"env"`
}

// ProviderKubernetesExecInput is an input type that accepts ProviderKubernetesExecArgs and ProviderKubernetesExecOutput values.
// You can construct a concrete instance of `ProviderKubernetesExecInput` via:
//
//	ProviderKubernetesExecArgs{...}
type ProviderKubernetesExecInput interface {
	pulumi.Input

	ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput
	ToProviderKubernetesExecOutputWithContext(context.Context) ProviderKubernetesExecOutput
}

type ProviderKubernetesExecArgs struct {
	// API version to use when decoding the ExecCredentials resource, e.g. `client.authentication.k8s.io/v1beta1`.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Map of environment variables to set when executing the plugin.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Command to execute.
	Command pulumi.StringInput `pulumi:"command"`
	// List of arguments to pass when executing the plugin.
	Env pulumi.StringMapInput `pulumi:"env"`
}

func (ProviderKubernetesExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetesExec)(nil)).Elem()
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput {
	return i.ToProviderKubernetesExecOutputWithContext(context.Background())
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecOutputWithContext(ctx context.Context) ProviderKubernetesExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecOutput)
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return i.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecOutput).ToProviderKubernetesExecPtrOutputWithContext(ctx)
}

// ProviderKubernetesExecPtrInput is an input type that accepts ProviderKubernetesExecArgs, ProviderKubernetesExecPtr and ProviderKubernetesExecPtrOutput values.
// You can construct a concrete instance of `ProviderKubernetesExecPtrInput` via:
//
//	        ProviderKubernetesExecArgs{...}
//
//	or:
//
//	        nil
type ProviderKubernetesExecPtrInput interface {
	pulumi.Input

	ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput
	ToProviderKubernetesExecPtrOutputWithContext(context.Context) ProviderKubernetesExecPtrOutput
}

type providerKubernetesExecPtrType ProviderKubernetesExecArgs

func ProviderKubernetesExecPtr(v *ProviderKubernetesExecArgs) ProviderKubernetesExecPtrInput {
	return (*providerKubernetesExecPtrType)(v)
}

func (*providerKubernetesExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetesExec)(nil)).Elem()
}

func (i *providerKubernetesExecPtrType) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return i.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (i *providerKubernetesExecPtrType) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecPtrOutput)
}

type ProviderKubernetesExecOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetesExec)(nil)).Elem()
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput {
	return o
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecOutputWithContext(ctx context.Context) ProviderKubernetesExecOutput {
	return o
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return o.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderKubernetesExec) *ProviderKubernetesExec {
		return &v
	}).(ProviderKubernetesExecPtrOutput)
}

// API version to use when decoding the ExecCredentials resource, e.g. `client.authentication.k8s.io/v1beta1`.
func (o ProviderKubernetesExecOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Map of environment variables to set when executing the plugin.
func (o ProviderKubernetesExecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Command to execute.
func (o ProviderKubernetesExecOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) string { return v.Command }).(pulumi.StringOutput)
}

// List of arguments to pass when executing the plugin.
func (o ProviderKubernetesExecOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

type ProviderKubernetesExecPtrOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetesExec)(nil)).Elem()
}

func (o ProviderKubernetesExecPtrOutput) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return o
}

func (o ProviderKubernetesExecPtrOutput) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return o
}

func (o ProviderKubernetesExecPtrOutput) Elem() ProviderKubernetesExecOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) ProviderKubernetesExec {
		if v != nil {
			return *v
		}
		var ret ProviderKubernetesExec
		return ret
	}).(ProviderKubernetesExecOutput)
}

// API version to use when decoding the ExecCredentials resource, e.g. `client.authentication.k8s.io/v1beta1`.
func (o ProviderKubernetesExecPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Map of environment variables to set when executing the plugin.
func (o ProviderKubernetesExecPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Command to execute.
func (o ProviderKubernetesExecPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

// List of arguments to pass when executing the plugin.
func (o ProviderKubernetesExecPtrOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Env
	}).(pulumi.StringMapOutput)
}

type GetApplicationMetadata struct {
	// An unstructured key value map stored with the cluster secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// A sequence number representing a specific generation of the desired state.
	Generation int `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) the cluster secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
	// Name of the applications.argoproj.io, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name string `pulumi:"name"`
	// Namespace of the applications.argoproj.io, must be unique. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace string `pulumi:"namespace"`
	// An opaque value that represents the internal version of this applications.argoproj.io that can be used by clients to determine when applications.argoproj.io has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion string `pulumi:"resourceVersion"`
	// The unique in time and space value for this applications.argoproj.io. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid string `pulumi:"uid"`
}

// GetApplicationMetadataInput is an input type that accepts GetApplicationMetadataArgs and GetApplicationMetadataOutput values.
// You can construct a concrete instance of `GetApplicationMetadataInput` via:
//
//	GetApplicationMetadataArgs{...}
type GetApplicationMetadataInput interface {
	pulumi.Input

	ToGetApplicationMetadataOutput() GetApplicationMetadataOutput
	ToGetApplicationMetadataOutputWithContext(context.Context) GetApplicationMetadataOutput
}

type GetApplicationMetadataArgs struct {
	// An unstructured key value map stored with the cluster secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// A sequence number representing a specific generation of the desired state.
	Generation pulumi.IntInput `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) the cluster secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name of the applications.argoproj.io, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the applications.argoproj.io, must be unique. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// An opaque value that represents the internal version of this applications.argoproj.io that can be used by clients to determine when applications.argoproj.io has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringInput `pulumi:"resourceVersion"`
	// The unique in time and space value for this applications.argoproj.io. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid pulumi.StringInput `pulumi:"uid"`
}

func (GetApplicationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationMetadata)(nil)).Elem()
}

func (i GetApplicationMetadataArgs) ToGetApplicationMetadataOutput() GetApplicationMetadataOutput {
	return i.ToGetApplicationMetadataOutputWithContext(context.Background())
}

func (i GetApplicationMetadataArgs) ToGetApplicationMetadataOutputWithContext(ctx context.Context) GetApplicationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationMetadataOutput)
}

type GetApplicationMetadataOutput struct{ *pulumi.OutputState }

func (GetApplicationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationMetadata)(nil)).Elem()
}

func (o GetApplicationMetadataOutput) ToGetApplicationMetadataOutput() GetApplicationMetadataOutput {
	return o
}

func (o GetApplicationMetadataOutput) ToGetApplicationMetadataOutputWithContext(ctx context.Context) GetApplicationMetadataOutput {
	return o
}

// An unstructured key value map stored with the cluster secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
func (o GetApplicationMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetApplicationMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// A sequence number representing a specific generation of the desired state.
func (o GetApplicationMetadataOutput) Generation() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationMetadata) int { return v.Generation }).(pulumi.IntOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) the cluster secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o GetApplicationMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetApplicationMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the applications.argoproj.io, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
func (o GetApplicationMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationMetadata) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the applications.argoproj.io, must be unique. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o GetApplicationMetadataOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationMetadata) string { return v.Namespace }).(pulumi.StringOutput)
}

// An opaque value that represents the internal version of this applications.argoproj.io that can be used by clients to determine when applications.argoproj.io has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o GetApplicationMetadataOutput) ResourceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationMetadata) string { return v.ResourceVersion }).(pulumi.StringOutput)
}

// The unique in time and space value for this applications.argoproj.io. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
func (o GetApplicationMetadataOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationMetadata) string { return v.Uid }).(pulumi.StringOutput)
}

type GetApplicationSpec struct {
	// Reference to the Kubernetes server and namespace in which the application will be deployed.
	Destination GetApplicationSpecDestination `pulumi:"destination"`
	// Resources and their fields which should be ignored during comparison. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#application-level-configuration.
	IgnoreDifferences []GetApplicationSpecIgnoreDifference `pulumi:"ignoreDifferences"`
	// List of information (URLs, email addresses, and plain text) that relates to the application.
	Infos []GetApplicationSpecInfo `pulumi:"infos"`
	// The project the application belongs to. Defaults to `default`.
	Project string `pulumi:"project"`
	// Limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
	RevisionHistoryLimit int `pulumi:"revisionHistoryLimit"`
	// Location of the application's manifests or chart.
	Sources []GetApplicationSpecSource `pulumi:"sources"`
	// Controls when and how a sync will be performed.
	SyncPolicy GetApplicationSpecSyncPolicy `pulumi:"syncPolicy"`
}

// GetApplicationSpecInput is an input type that accepts GetApplicationSpecArgs and GetApplicationSpecOutput values.
// You can construct a concrete instance of `GetApplicationSpecInput` via:
//
//	GetApplicationSpecArgs{...}
type GetApplicationSpecInput interface {
	pulumi.Input

	ToGetApplicationSpecOutput() GetApplicationSpecOutput
	ToGetApplicationSpecOutputWithContext(context.Context) GetApplicationSpecOutput
}

type GetApplicationSpecArgs struct {
	// Reference to the Kubernetes server and namespace in which the application will be deployed.
	Destination GetApplicationSpecDestinationInput `pulumi:"destination"`
	// Resources and their fields which should be ignored during comparison. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#application-level-configuration.
	IgnoreDifferences GetApplicationSpecIgnoreDifferenceArrayInput `pulumi:"ignoreDifferences"`
	// List of information (URLs, email addresses, and plain text) that relates to the application.
	Infos GetApplicationSpecInfoArrayInput `pulumi:"infos"`
	// The project the application belongs to. Defaults to `default`.
	Project pulumi.StringInput `pulumi:"project"`
	// Limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
	RevisionHistoryLimit pulumi.IntInput `pulumi:"revisionHistoryLimit"`
	// Location of the application's manifests or chart.
	Sources GetApplicationSpecSourceArrayInput `pulumi:"sources"`
	// Controls when and how a sync will be performed.
	SyncPolicy GetApplicationSpecSyncPolicyInput `pulumi:"syncPolicy"`
}

func (GetApplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpec)(nil)).Elem()
}

func (i GetApplicationSpecArgs) ToGetApplicationSpecOutput() GetApplicationSpecOutput {
	return i.ToGetApplicationSpecOutputWithContext(context.Background())
}

func (i GetApplicationSpecArgs) ToGetApplicationSpecOutputWithContext(ctx context.Context) GetApplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecOutput)
}

type GetApplicationSpecOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpec)(nil)).Elem()
}

func (o GetApplicationSpecOutput) ToGetApplicationSpecOutput() GetApplicationSpecOutput {
	return o
}

func (o GetApplicationSpecOutput) ToGetApplicationSpecOutputWithContext(ctx context.Context) GetApplicationSpecOutput {
	return o
}

// Reference to the Kubernetes server and namespace in which the application will be deployed.
func (o GetApplicationSpecOutput) Destination() GetApplicationSpecDestinationOutput {
	return o.ApplyT(func(v GetApplicationSpec) GetApplicationSpecDestination { return v.Destination }).(GetApplicationSpecDestinationOutput)
}

// Resources and their fields which should be ignored during comparison. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#application-level-configuration.
func (o GetApplicationSpecOutput) IgnoreDifferences() GetApplicationSpecIgnoreDifferenceArrayOutput {
	return o.ApplyT(func(v GetApplicationSpec) []GetApplicationSpecIgnoreDifference { return v.IgnoreDifferences }).(GetApplicationSpecIgnoreDifferenceArrayOutput)
}

// List of information (URLs, email addresses, and plain text) that relates to the application.
func (o GetApplicationSpecOutput) Infos() GetApplicationSpecInfoArrayOutput {
	return o.ApplyT(func(v GetApplicationSpec) []GetApplicationSpecInfo { return v.Infos }).(GetApplicationSpecInfoArrayOutput)
}

// The project the application belongs to. Defaults to `default`.
func (o GetApplicationSpecOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpec) string { return v.Project }).(pulumi.StringOutput)
}

// Limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
func (o GetApplicationSpecOutput) RevisionHistoryLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationSpec) int { return v.RevisionHistoryLimit }).(pulumi.IntOutput)
}

// Location of the application's manifests or chart.
func (o GetApplicationSpecOutput) Sources() GetApplicationSpecSourceArrayOutput {
	return o.ApplyT(func(v GetApplicationSpec) []GetApplicationSpecSource { return v.Sources }).(GetApplicationSpecSourceArrayOutput)
}

// Controls when and how a sync will be performed.
func (o GetApplicationSpecOutput) SyncPolicy() GetApplicationSpecSyncPolicyOutput {
	return o.ApplyT(func(v GetApplicationSpec) GetApplicationSpecSyncPolicy { return v.SyncPolicy }).(GetApplicationSpecSyncPolicyOutput)
}

type GetApplicationSpecDestination struct {
	// Name of the target cluster. Can be used instead of `server`.
	Name string `pulumi:"name"`
	// Target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
	Namespace string `pulumi:"namespace"`
	// URL of the target cluster and must be set to the Kubernetes control plane API.
	Server string `pulumi:"server"`
}

// GetApplicationSpecDestinationInput is an input type that accepts GetApplicationSpecDestinationArgs and GetApplicationSpecDestinationOutput values.
// You can construct a concrete instance of `GetApplicationSpecDestinationInput` via:
//
//	GetApplicationSpecDestinationArgs{...}
type GetApplicationSpecDestinationInput interface {
	pulumi.Input

	ToGetApplicationSpecDestinationOutput() GetApplicationSpecDestinationOutput
	ToGetApplicationSpecDestinationOutputWithContext(context.Context) GetApplicationSpecDestinationOutput
}

type GetApplicationSpecDestinationArgs struct {
	// Name of the target cluster. Can be used instead of `server`.
	Name pulumi.StringInput `pulumi:"name"`
	// Target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// URL of the target cluster and must be set to the Kubernetes control plane API.
	Server pulumi.StringInput `pulumi:"server"`
}

func (GetApplicationSpecDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecDestination)(nil)).Elem()
}

func (i GetApplicationSpecDestinationArgs) ToGetApplicationSpecDestinationOutput() GetApplicationSpecDestinationOutput {
	return i.ToGetApplicationSpecDestinationOutputWithContext(context.Background())
}

func (i GetApplicationSpecDestinationArgs) ToGetApplicationSpecDestinationOutputWithContext(ctx context.Context) GetApplicationSpecDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecDestinationOutput)
}

type GetApplicationSpecDestinationOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecDestination)(nil)).Elem()
}

func (o GetApplicationSpecDestinationOutput) ToGetApplicationSpecDestinationOutput() GetApplicationSpecDestinationOutput {
	return o
}

func (o GetApplicationSpecDestinationOutput) ToGetApplicationSpecDestinationOutputWithContext(ctx context.Context) GetApplicationSpecDestinationOutput {
	return o
}

// Name of the target cluster. Can be used instead of `server`.
func (o GetApplicationSpecDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecDestination) string { return v.Name }).(pulumi.StringOutput)
}

// Target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
func (o GetApplicationSpecDestinationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecDestination) string { return v.Namespace }).(pulumi.StringOutput)
}

// URL of the target cluster and must be set to the Kubernetes control plane API.
func (o GetApplicationSpecDestinationOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecDestination) string { return v.Server }).(pulumi.StringOutput)
}

type GetApplicationSpecIgnoreDifference struct {
	// The Kubernetes resource Group to match for.
	Group string `pulumi:"group"`
	// List of JQ path expression strings targeting the field(s) to ignore.
	JqPathExpressions []string `pulumi:"jqPathExpressions"`
	// List of JSONPaths strings targeting the field(s) to ignore.
	JsonPointers []string `pulumi:"jsonPointers"`
	// The Kubernetes resource Kind to match for.
	Kind string `pulumi:"kind"`
	// The Kubernetes resource Name to match for.
	Name string `pulumi:"name"`
	// The Kubernetes resource Namespace to match for.
	Namespace string `pulumi:"namespace"`
}

// GetApplicationSpecIgnoreDifferenceInput is an input type that accepts GetApplicationSpecIgnoreDifferenceArgs and GetApplicationSpecIgnoreDifferenceOutput values.
// You can construct a concrete instance of `GetApplicationSpecIgnoreDifferenceInput` via:
//
//	GetApplicationSpecIgnoreDifferenceArgs{...}
type GetApplicationSpecIgnoreDifferenceInput interface {
	pulumi.Input

	ToGetApplicationSpecIgnoreDifferenceOutput() GetApplicationSpecIgnoreDifferenceOutput
	ToGetApplicationSpecIgnoreDifferenceOutputWithContext(context.Context) GetApplicationSpecIgnoreDifferenceOutput
}

type GetApplicationSpecIgnoreDifferenceArgs struct {
	// The Kubernetes resource Group to match for.
	Group pulumi.StringInput `pulumi:"group"`
	// List of JQ path expression strings targeting the field(s) to ignore.
	JqPathExpressions pulumi.StringArrayInput `pulumi:"jqPathExpressions"`
	// List of JSONPaths strings targeting the field(s) to ignore.
	JsonPointers pulumi.StringArrayInput `pulumi:"jsonPointers"`
	// The Kubernetes resource Kind to match for.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The Kubernetes resource Name to match for.
	Name pulumi.StringInput `pulumi:"name"`
	// The Kubernetes resource Namespace to match for.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetApplicationSpecIgnoreDifferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecIgnoreDifference)(nil)).Elem()
}

func (i GetApplicationSpecIgnoreDifferenceArgs) ToGetApplicationSpecIgnoreDifferenceOutput() GetApplicationSpecIgnoreDifferenceOutput {
	return i.ToGetApplicationSpecIgnoreDifferenceOutputWithContext(context.Background())
}

func (i GetApplicationSpecIgnoreDifferenceArgs) ToGetApplicationSpecIgnoreDifferenceOutputWithContext(ctx context.Context) GetApplicationSpecIgnoreDifferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecIgnoreDifferenceOutput)
}

// GetApplicationSpecIgnoreDifferenceArrayInput is an input type that accepts GetApplicationSpecIgnoreDifferenceArray and GetApplicationSpecIgnoreDifferenceArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecIgnoreDifferenceArrayInput` via:
//
//	GetApplicationSpecIgnoreDifferenceArray{ GetApplicationSpecIgnoreDifferenceArgs{...} }
type GetApplicationSpecIgnoreDifferenceArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecIgnoreDifferenceArrayOutput() GetApplicationSpecIgnoreDifferenceArrayOutput
	ToGetApplicationSpecIgnoreDifferenceArrayOutputWithContext(context.Context) GetApplicationSpecIgnoreDifferenceArrayOutput
}

type GetApplicationSpecIgnoreDifferenceArray []GetApplicationSpecIgnoreDifferenceInput

func (GetApplicationSpecIgnoreDifferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecIgnoreDifference)(nil)).Elem()
}

func (i GetApplicationSpecIgnoreDifferenceArray) ToGetApplicationSpecIgnoreDifferenceArrayOutput() GetApplicationSpecIgnoreDifferenceArrayOutput {
	return i.ToGetApplicationSpecIgnoreDifferenceArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecIgnoreDifferenceArray) ToGetApplicationSpecIgnoreDifferenceArrayOutputWithContext(ctx context.Context) GetApplicationSpecIgnoreDifferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecIgnoreDifferenceArrayOutput)
}

type GetApplicationSpecIgnoreDifferenceOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecIgnoreDifferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecIgnoreDifference)(nil)).Elem()
}

func (o GetApplicationSpecIgnoreDifferenceOutput) ToGetApplicationSpecIgnoreDifferenceOutput() GetApplicationSpecIgnoreDifferenceOutput {
	return o
}

func (o GetApplicationSpecIgnoreDifferenceOutput) ToGetApplicationSpecIgnoreDifferenceOutputWithContext(ctx context.Context) GetApplicationSpecIgnoreDifferenceOutput {
	return o
}

// The Kubernetes resource Group to match for.
func (o GetApplicationSpecIgnoreDifferenceOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecIgnoreDifference) string { return v.Group }).(pulumi.StringOutput)
}

// List of JQ path expression strings targeting the field(s) to ignore.
func (o GetApplicationSpecIgnoreDifferenceOutput) JqPathExpressions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecIgnoreDifference) []string { return v.JqPathExpressions }).(pulumi.StringArrayOutput)
}

// List of JSONPaths strings targeting the field(s) to ignore.
func (o GetApplicationSpecIgnoreDifferenceOutput) JsonPointers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecIgnoreDifference) []string { return v.JsonPointers }).(pulumi.StringArrayOutput)
}

// The Kubernetes resource Kind to match for.
func (o GetApplicationSpecIgnoreDifferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecIgnoreDifference) string { return v.Kind }).(pulumi.StringOutput)
}

// The Kubernetes resource Name to match for.
func (o GetApplicationSpecIgnoreDifferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecIgnoreDifference) string { return v.Name }).(pulumi.StringOutput)
}

// The Kubernetes resource Namespace to match for.
func (o GetApplicationSpecIgnoreDifferenceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecIgnoreDifference) string { return v.Namespace }).(pulumi.StringOutput)
}

type GetApplicationSpecIgnoreDifferenceArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecIgnoreDifferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecIgnoreDifference)(nil)).Elem()
}

func (o GetApplicationSpecIgnoreDifferenceArrayOutput) ToGetApplicationSpecIgnoreDifferenceArrayOutput() GetApplicationSpecIgnoreDifferenceArrayOutput {
	return o
}

func (o GetApplicationSpecIgnoreDifferenceArrayOutput) ToGetApplicationSpecIgnoreDifferenceArrayOutputWithContext(ctx context.Context) GetApplicationSpecIgnoreDifferenceArrayOutput {
	return o
}

func (o GetApplicationSpecIgnoreDifferenceArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecIgnoreDifferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecIgnoreDifference {
		return vs[0].([]GetApplicationSpecIgnoreDifference)[vs[1].(int)]
	}).(GetApplicationSpecIgnoreDifferenceOutput)
}

type GetApplicationSpecInfo struct {
	// Name of the information.
	Name string `pulumi:"name"`
	// Value of the information.
	Value string `pulumi:"value"`
}

// GetApplicationSpecInfoInput is an input type that accepts GetApplicationSpecInfoArgs and GetApplicationSpecInfoOutput values.
// You can construct a concrete instance of `GetApplicationSpecInfoInput` via:
//
//	GetApplicationSpecInfoArgs{...}
type GetApplicationSpecInfoInput interface {
	pulumi.Input

	ToGetApplicationSpecInfoOutput() GetApplicationSpecInfoOutput
	ToGetApplicationSpecInfoOutputWithContext(context.Context) GetApplicationSpecInfoOutput
}

type GetApplicationSpecInfoArgs struct {
	// Name of the information.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the information.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationSpecInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecInfo)(nil)).Elem()
}

func (i GetApplicationSpecInfoArgs) ToGetApplicationSpecInfoOutput() GetApplicationSpecInfoOutput {
	return i.ToGetApplicationSpecInfoOutputWithContext(context.Background())
}

func (i GetApplicationSpecInfoArgs) ToGetApplicationSpecInfoOutputWithContext(ctx context.Context) GetApplicationSpecInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecInfoOutput)
}

// GetApplicationSpecInfoArrayInput is an input type that accepts GetApplicationSpecInfoArray and GetApplicationSpecInfoArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecInfoArrayInput` via:
//
//	GetApplicationSpecInfoArray{ GetApplicationSpecInfoArgs{...} }
type GetApplicationSpecInfoArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecInfoArrayOutput() GetApplicationSpecInfoArrayOutput
	ToGetApplicationSpecInfoArrayOutputWithContext(context.Context) GetApplicationSpecInfoArrayOutput
}

type GetApplicationSpecInfoArray []GetApplicationSpecInfoInput

func (GetApplicationSpecInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecInfo)(nil)).Elem()
}

func (i GetApplicationSpecInfoArray) ToGetApplicationSpecInfoArrayOutput() GetApplicationSpecInfoArrayOutput {
	return i.ToGetApplicationSpecInfoArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecInfoArray) ToGetApplicationSpecInfoArrayOutputWithContext(ctx context.Context) GetApplicationSpecInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecInfoArrayOutput)
}

type GetApplicationSpecInfoOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecInfo)(nil)).Elem()
}

func (o GetApplicationSpecInfoOutput) ToGetApplicationSpecInfoOutput() GetApplicationSpecInfoOutput {
	return o
}

func (o GetApplicationSpecInfoOutput) ToGetApplicationSpecInfoOutputWithContext(ctx context.Context) GetApplicationSpecInfoOutput {
	return o
}

// Name of the information.
func (o GetApplicationSpecInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecInfo) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the information.
func (o GetApplicationSpecInfoOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecInfo) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationSpecInfoArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecInfo)(nil)).Elem()
}

func (o GetApplicationSpecInfoArrayOutput) ToGetApplicationSpecInfoArrayOutput() GetApplicationSpecInfoArrayOutput {
	return o
}

func (o GetApplicationSpecInfoArrayOutput) ToGetApplicationSpecInfoArrayOutputWithContext(ctx context.Context) GetApplicationSpecInfoArrayOutput {
	return o
}

func (o GetApplicationSpecInfoArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecInfo {
		return vs[0].([]GetApplicationSpecInfo)[vs[1].(int)]
	}).(GetApplicationSpecInfoOutput)
}

type GetApplicationSpecSource struct {
	// Helm chart name. Must be specified for applications sourced from a Helm repo.
	Chart string `pulumi:"chart"`
	// Path/directory specific options.
	Directory GetApplicationSpecSourceDirectory `pulumi:"directory"`
	// Helm specific options.
	Helm GetApplicationSpecSourceHelm `pulumi:"helm"`
	// Kustomize specific options.
	Kustomize GetApplicationSpecSourceKustomize `pulumi:"kustomize"`
	// Directory path within the repository. Only valid for applications sourced from Git.
	Path string `pulumi:"path"`
	// Config management plugin specific options.
	Plugin GetApplicationSpecSourcePlugin `pulumi:"plugin"`
	// Reference to another `source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `ref` with `path` and/or `chart`.
	Ref string `pulumi:"ref"`
	// URL to the repository (Git or Helm) that contains the application manifests.
	RepoUrl string `pulumi:"repoUrl"`
	// Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision string `pulumi:"targetRevision"`
}

// GetApplicationSpecSourceInput is an input type that accepts GetApplicationSpecSourceArgs and GetApplicationSpecSourceOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceInput` via:
//
//	GetApplicationSpecSourceArgs{...}
type GetApplicationSpecSourceInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceOutput() GetApplicationSpecSourceOutput
	ToGetApplicationSpecSourceOutputWithContext(context.Context) GetApplicationSpecSourceOutput
}

type GetApplicationSpecSourceArgs struct {
	// Helm chart name. Must be specified for applications sourced from a Helm repo.
	Chart pulumi.StringInput `pulumi:"chart"`
	// Path/directory specific options.
	Directory GetApplicationSpecSourceDirectoryInput `pulumi:"directory"`
	// Helm specific options.
	Helm GetApplicationSpecSourceHelmInput `pulumi:"helm"`
	// Kustomize specific options.
	Kustomize GetApplicationSpecSourceKustomizeInput `pulumi:"kustomize"`
	// Directory path within the repository. Only valid for applications sourced from Git.
	Path pulumi.StringInput `pulumi:"path"`
	// Config management plugin specific options.
	Plugin GetApplicationSpecSourcePluginInput `pulumi:"plugin"`
	// Reference to another `source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `ref` with `path` and/or `chart`.
	Ref pulumi.StringInput `pulumi:"ref"`
	// URL to the repository (Git or Helm) that contains the application manifests.
	RepoUrl pulumi.StringInput `pulumi:"repoUrl"`
	// Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision pulumi.StringInput `pulumi:"targetRevision"`
}

func (GetApplicationSpecSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSource)(nil)).Elem()
}

func (i GetApplicationSpecSourceArgs) ToGetApplicationSpecSourceOutput() GetApplicationSpecSourceOutput {
	return i.ToGetApplicationSpecSourceOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceArgs) ToGetApplicationSpecSourceOutputWithContext(ctx context.Context) GetApplicationSpecSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceOutput)
}

// GetApplicationSpecSourceArrayInput is an input type that accepts GetApplicationSpecSourceArray and GetApplicationSpecSourceArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceArrayInput` via:
//
//	GetApplicationSpecSourceArray{ GetApplicationSpecSourceArgs{...} }
type GetApplicationSpecSourceArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceArrayOutput() GetApplicationSpecSourceArrayOutput
	ToGetApplicationSpecSourceArrayOutputWithContext(context.Context) GetApplicationSpecSourceArrayOutput
}

type GetApplicationSpecSourceArray []GetApplicationSpecSourceInput

func (GetApplicationSpecSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSource)(nil)).Elem()
}

func (i GetApplicationSpecSourceArray) ToGetApplicationSpecSourceArrayOutput() GetApplicationSpecSourceArrayOutput {
	return i.ToGetApplicationSpecSourceArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceArray) ToGetApplicationSpecSourceArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceArrayOutput)
}

type GetApplicationSpecSourceOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSource)(nil)).Elem()
}

func (o GetApplicationSpecSourceOutput) ToGetApplicationSpecSourceOutput() GetApplicationSpecSourceOutput {
	return o
}

func (o GetApplicationSpecSourceOutput) ToGetApplicationSpecSourceOutputWithContext(ctx context.Context) GetApplicationSpecSourceOutput {
	return o
}

// Helm chart name. Must be specified for applications sourced from a Helm repo.
func (o GetApplicationSpecSourceOutput) Chart() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) string { return v.Chart }).(pulumi.StringOutput)
}

// Path/directory specific options.
func (o GetApplicationSpecSourceOutput) Directory() GetApplicationSpecSourceDirectoryOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) GetApplicationSpecSourceDirectory { return v.Directory }).(GetApplicationSpecSourceDirectoryOutput)
}

// Helm specific options.
func (o GetApplicationSpecSourceOutput) Helm() GetApplicationSpecSourceHelmOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) GetApplicationSpecSourceHelm { return v.Helm }).(GetApplicationSpecSourceHelmOutput)
}

// Kustomize specific options.
func (o GetApplicationSpecSourceOutput) Kustomize() GetApplicationSpecSourceKustomizeOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) GetApplicationSpecSourceKustomize { return v.Kustomize }).(GetApplicationSpecSourceKustomizeOutput)
}

// Directory path within the repository. Only valid for applications sourced from Git.
func (o GetApplicationSpecSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) string { return v.Path }).(pulumi.StringOutput)
}

// Config management plugin specific options.
func (o GetApplicationSpecSourceOutput) Plugin() GetApplicationSpecSourcePluginOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) GetApplicationSpecSourcePlugin { return v.Plugin }).(GetApplicationSpecSourcePluginOutput)
}

// Reference to another `source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `ref` with `path` and/or `chart`.
func (o GetApplicationSpecSourceOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) string { return v.Ref }).(pulumi.StringOutput)
}

// URL to the repository (Git or Helm) that contains the application manifests.
func (o GetApplicationSpecSourceOutput) RepoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) string { return v.RepoUrl }).(pulumi.StringOutput)
}

// Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o GetApplicationSpecSourceOutput) TargetRevision() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSource) string { return v.TargetRevision }).(pulumi.StringOutput)
}

type GetApplicationSpecSourceArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSource)(nil)).Elem()
}

func (o GetApplicationSpecSourceArrayOutput) ToGetApplicationSpecSourceArrayOutput() GetApplicationSpecSourceArrayOutput {
	return o
}

func (o GetApplicationSpecSourceArrayOutput) ToGetApplicationSpecSourceArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceArrayOutput {
	return o
}

func (o GetApplicationSpecSourceArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecSource {
		return vs[0].([]GetApplicationSpecSource)[vs[1].(int)]
	}).(GetApplicationSpecSourceOutput)
}

type GetApplicationSpecSourceDirectory struct {
	// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation. This takes precedence over the `include` field. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
	Exclude string `pulumi:"exclude"`
	// Glob pattern to match paths against that should be explicitly included during manifest generation. If this field is set, only matching manifests will be included. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
	Include string `pulumi:"include"`
	// Jsonnet specific options.
	Jsonnet GetApplicationSpecSourceDirectoryJsonnet `pulumi:"jsonnet"`
	// Whether to scan a directory recursively for manifests.
	Recurse bool `pulumi:"recurse"`
}

// GetApplicationSpecSourceDirectoryInput is an input type that accepts GetApplicationSpecSourceDirectoryArgs and GetApplicationSpecSourceDirectoryOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceDirectoryInput` via:
//
//	GetApplicationSpecSourceDirectoryArgs{...}
type GetApplicationSpecSourceDirectoryInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceDirectoryOutput() GetApplicationSpecSourceDirectoryOutput
	ToGetApplicationSpecSourceDirectoryOutputWithContext(context.Context) GetApplicationSpecSourceDirectoryOutput
}

type GetApplicationSpecSourceDirectoryArgs struct {
	// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation. This takes precedence over the `include` field. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
	Exclude pulumi.StringInput `pulumi:"exclude"`
	// Glob pattern to match paths against that should be explicitly included during manifest generation. If this field is set, only matching manifests will be included. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
	Include pulumi.StringInput `pulumi:"include"`
	// Jsonnet specific options.
	Jsonnet GetApplicationSpecSourceDirectoryJsonnetInput `pulumi:"jsonnet"`
	// Whether to scan a directory recursively for manifests.
	Recurse pulumi.BoolInput `pulumi:"recurse"`
}

func (GetApplicationSpecSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i GetApplicationSpecSourceDirectoryArgs) ToGetApplicationSpecSourceDirectoryOutput() GetApplicationSpecSourceDirectoryOutput {
	return i.ToGetApplicationSpecSourceDirectoryOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceDirectoryArgs) ToGetApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceDirectoryOutput)
}

type GetApplicationSpecSourceDirectoryOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o GetApplicationSpecSourceDirectoryOutput) ToGetApplicationSpecSourceDirectoryOutput() GetApplicationSpecSourceDirectoryOutput {
	return o
}

func (o GetApplicationSpecSourceDirectoryOutput) ToGetApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryOutput {
	return o
}

// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation. This takes precedence over the `include` field. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
func (o GetApplicationSpecSourceDirectoryOutput) Exclude() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectory) string { return v.Exclude }).(pulumi.StringOutput)
}

// Glob pattern to match paths against that should be explicitly included during manifest generation. If this field is set, only matching manifests will be included. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
func (o GetApplicationSpecSourceDirectoryOutput) Include() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectory) string { return v.Include }).(pulumi.StringOutput)
}

// Jsonnet specific options.
func (o GetApplicationSpecSourceDirectoryOutput) Jsonnet() GetApplicationSpecSourceDirectoryJsonnetOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectory) GetApplicationSpecSourceDirectoryJsonnet { return v.Jsonnet }).(GetApplicationSpecSourceDirectoryJsonnetOutput)
}

// Whether to scan a directory recursively for manifests.
func (o GetApplicationSpecSourceDirectoryOutput) Recurse() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectory) bool { return v.Recurse }).(pulumi.BoolOutput)
}

type GetApplicationSpecSourceDirectoryJsonnet struct {
	// List of Jsonnet External Variables.
	ExtVars []GetApplicationSpecSourceDirectoryJsonnetExtVar `pulumi:"extVars"`
	// Additional library search dirs.
	Libs []string `pulumi:"libs"`
	// List of Jsonnet Top-level Arguments
	Tlas []GetApplicationSpecSourceDirectoryJsonnetTla `pulumi:"tlas"`
}

// GetApplicationSpecSourceDirectoryJsonnetInput is an input type that accepts GetApplicationSpecSourceDirectoryJsonnetArgs and GetApplicationSpecSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceDirectoryJsonnetInput` via:
//
//	GetApplicationSpecSourceDirectoryJsonnetArgs{...}
type GetApplicationSpecSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceDirectoryJsonnetOutput() GetApplicationSpecSourceDirectoryJsonnetOutput
	ToGetApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Context) GetApplicationSpecSourceDirectoryJsonnetOutput
}

type GetApplicationSpecSourceDirectoryJsonnetArgs struct {
	// List of Jsonnet External Variables.
	ExtVars GetApplicationSpecSourceDirectoryJsonnetExtVarArrayInput `pulumi:"extVars"`
	// Additional library search dirs.
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// List of Jsonnet Top-level Arguments
	Tlas GetApplicationSpecSourceDirectoryJsonnetTlaArrayInput `pulumi:"tlas"`
}

func (GetApplicationSpecSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i GetApplicationSpecSourceDirectoryJsonnetArgs) ToGetApplicationSpecSourceDirectoryJsonnetOutput() GetApplicationSpecSourceDirectoryJsonnetOutput {
	return i.ToGetApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceDirectoryJsonnetArgs) ToGetApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceDirectoryJsonnetOutput)
}

type GetApplicationSpecSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GetApplicationSpecSourceDirectoryJsonnetOutput) ToGetApplicationSpecSourceDirectoryJsonnetOutput() GetApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o GetApplicationSpecSourceDirectoryJsonnetOutput) ToGetApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

// List of Jsonnet External Variables.
func (o GetApplicationSpecSourceDirectoryJsonnetOutput) ExtVars() GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnet) []GetApplicationSpecSourceDirectoryJsonnetExtVar {
		return v.ExtVars
	}).(GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

// Additional library search dirs.
func (o GetApplicationSpecSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

// List of Jsonnet Top-level Arguments
func (o GetApplicationSpecSourceDirectoryJsonnetOutput) Tlas() GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnet) []GetApplicationSpecSourceDirectoryJsonnetTla {
		return v.Tlas
	}).(GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GetApplicationSpecSourceDirectoryJsonnetExtVar struct {
	// Determines whether the variable should be evaluated as jsonnet code or treated as string.
	Code bool `pulumi:"code"`
	// Name of Jsonnet variable.
	Name string `pulumi:"name"`
	// Value of Jsonnet variable.
	Value string `pulumi:"value"`
}

// GetApplicationSpecSourceDirectoryJsonnetExtVarInput is an input type that accepts GetApplicationSpecSourceDirectoryJsonnetExtVarArgs and GetApplicationSpecSourceDirectoryJsonnetExtVarOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceDirectoryJsonnetExtVarInput` via:
//
//	GetApplicationSpecSourceDirectoryJsonnetExtVarArgs{...}
type GetApplicationSpecSourceDirectoryJsonnetExtVarInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetApplicationSpecSourceDirectoryJsonnetExtVarOutput
	ToGetApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Context) GetApplicationSpecSourceDirectoryJsonnetExtVarOutput
}

type GetApplicationSpecSourceDirectoryJsonnetExtVarArgs struct {
	// Determines whether the variable should be evaluated as jsonnet code or treated as string.
	Code pulumi.BoolInput `pulumi:"code"`
	// Name of Jsonnet variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of Jsonnet variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationSpecSourceDirectoryJsonnetExtVarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GetApplicationSpecSourceDirectoryJsonnetExtVarArgs) ToGetApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return i.ToGetApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceDirectoryJsonnetExtVarArgs) ToGetApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceDirectoryJsonnetExtVarOutput)
}

// GetApplicationSpecSourceDirectoryJsonnetExtVarArrayInput is an input type that accepts GetApplicationSpecSourceDirectoryJsonnetExtVarArray and GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceDirectoryJsonnetExtVarArrayInput` via:
//
//	GetApplicationSpecSourceDirectoryJsonnetExtVarArray{ GetApplicationSpecSourceDirectoryJsonnetExtVarArgs{...} }
type GetApplicationSpecSourceDirectoryJsonnetExtVarArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput
	ToGetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Context) GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput
}

type GetApplicationSpecSourceDirectoryJsonnetExtVarArray []GetApplicationSpecSourceDirectoryJsonnetExtVarInput

func (GetApplicationSpecSourceDirectoryJsonnetExtVarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GetApplicationSpecSourceDirectoryJsonnetExtVarArray) ToGetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return i.ToGetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceDirectoryJsonnetExtVarArray) ToGetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

type GetApplicationSpecSourceDirectoryJsonnetExtVarOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceDirectoryJsonnetExtVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GetApplicationSpecSourceDirectoryJsonnetExtVarOutput) ToGetApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

func (o GetApplicationSpecSourceDirectoryJsonnetExtVarOutput) ToGetApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

// Determines whether the variable should be evaluated as jsonnet code or treated as string.
func (o GetApplicationSpecSourceDirectoryJsonnetExtVarOutput) Code() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnetExtVar) bool { return v.Code }).(pulumi.BoolOutput)
}

// Name of Jsonnet variable.
func (o GetApplicationSpecSourceDirectoryJsonnetExtVarOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnetExtVar) string { return v.Name }).(pulumi.StringOutput)
}

// Value of Jsonnet variable.
func (o GetApplicationSpecSourceDirectoryJsonnetExtVarOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnetExtVar) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecSourceDirectoryJsonnetExtVar {
		return vs[0].([]GetApplicationSpecSourceDirectoryJsonnetExtVar)[vs[1].(int)]
	}).(GetApplicationSpecSourceDirectoryJsonnetExtVarOutput)
}

type GetApplicationSpecSourceDirectoryJsonnetTla struct {
	// Determines whether the variable should be evaluated as jsonnet code or treated as string.
	Code bool `pulumi:"code"`
	// Name of Jsonnet variable.
	Name string `pulumi:"name"`
	// Value of Jsonnet variable.
	Value string `pulumi:"value"`
}

// GetApplicationSpecSourceDirectoryJsonnetTlaInput is an input type that accepts GetApplicationSpecSourceDirectoryJsonnetTlaArgs and GetApplicationSpecSourceDirectoryJsonnetTlaOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceDirectoryJsonnetTlaInput` via:
//
//	GetApplicationSpecSourceDirectoryJsonnetTlaArgs{...}
type GetApplicationSpecSourceDirectoryJsonnetTlaInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceDirectoryJsonnetTlaOutput() GetApplicationSpecSourceDirectoryJsonnetTlaOutput
	ToGetApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Context) GetApplicationSpecSourceDirectoryJsonnetTlaOutput
}

type GetApplicationSpecSourceDirectoryJsonnetTlaArgs struct {
	// Determines whether the variable should be evaluated as jsonnet code or treated as string.
	Code pulumi.BoolInput `pulumi:"code"`
	// Name of Jsonnet variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of Jsonnet variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationSpecSourceDirectoryJsonnetTlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GetApplicationSpecSourceDirectoryJsonnetTlaArgs) ToGetApplicationSpecSourceDirectoryJsonnetTlaOutput() GetApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return i.ToGetApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceDirectoryJsonnetTlaArgs) ToGetApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceDirectoryJsonnetTlaOutput)
}

// GetApplicationSpecSourceDirectoryJsonnetTlaArrayInput is an input type that accepts GetApplicationSpecSourceDirectoryJsonnetTlaArray and GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceDirectoryJsonnetTlaArrayInput` via:
//
//	GetApplicationSpecSourceDirectoryJsonnetTlaArray{ GetApplicationSpecSourceDirectoryJsonnetTlaArgs{...} }
type GetApplicationSpecSourceDirectoryJsonnetTlaArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput
	ToGetApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Context) GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput
}

type GetApplicationSpecSourceDirectoryJsonnetTlaArray []GetApplicationSpecSourceDirectoryJsonnetTlaInput

func (GetApplicationSpecSourceDirectoryJsonnetTlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GetApplicationSpecSourceDirectoryJsonnetTlaArray) ToGetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return i.ToGetApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceDirectoryJsonnetTlaArray) ToGetApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GetApplicationSpecSourceDirectoryJsonnetTlaOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceDirectoryJsonnetTlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GetApplicationSpecSourceDirectoryJsonnetTlaOutput) ToGetApplicationSpecSourceDirectoryJsonnetTlaOutput() GetApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

func (o GetApplicationSpecSourceDirectoryJsonnetTlaOutput) ToGetApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

// Determines whether the variable should be evaluated as jsonnet code or treated as string.
func (o GetApplicationSpecSourceDirectoryJsonnetTlaOutput) Code() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnetTla) bool { return v.Code }).(pulumi.BoolOutput)
}

// Name of Jsonnet variable.
func (o GetApplicationSpecSourceDirectoryJsonnetTlaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnetTla) string { return v.Name }).(pulumi.StringOutput)
}

// Value of Jsonnet variable.
func (o GetApplicationSpecSourceDirectoryJsonnetTlaOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceDirectoryJsonnetTla) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ToGetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ToGetApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecSourceDirectoryJsonnetTla {
		return vs[0].([]GetApplicationSpecSourceDirectoryJsonnetTla)[vs[1].(int)]
	}).(GetApplicationSpecSourceDirectoryJsonnetTlaOutput)
}

type GetApplicationSpecSourceHelm struct {
	// File parameters for the helm template.
	FileParameters []GetApplicationSpecSourceHelmFileParameter `pulumi:"fileParameters"`
	// Prevents 'helm template' from failing when `valueFiles` do not exist locally by not appending them to 'helm template --values'.
	IgnoreMissingValueFiles bool `pulumi:"ignoreMissingValueFiles"`
	// Helm parameters which are passed to the helm template command upon manifest generation.
	Parameters []GetApplicationSpecSourceHelmParameter `pulumi:"parameters"`
	// If true then adds '--pass-credentials' to Helm commands to pass credentials to all domains.
	PassCredentials bool `pulumi:"passCredentials"`
	// Helm release name. If omitted it will use the application name.
	ReleaseName string `pulumi:"releaseName"`
	// Whether to skip custom resource definition installation step (Helm's [--skip-crds](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/)).
	SkipCrds bool `pulumi:"skipCrds"`
	// List of Helm value files to use when generating a template.
	ValueFiles []string `pulumi:"valueFiles"`
	// Helm values to be passed to 'helm template', typically defined as a Attribute.
	Values string `pulumi:"values"`
}

// GetApplicationSpecSourceHelmInput is an input type that accepts GetApplicationSpecSourceHelmArgs and GetApplicationSpecSourceHelmOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceHelmInput` via:
//
//	GetApplicationSpecSourceHelmArgs{...}
type GetApplicationSpecSourceHelmInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceHelmOutput() GetApplicationSpecSourceHelmOutput
	ToGetApplicationSpecSourceHelmOutputWithContext(context.Context) GetApplicationSpecSourceHelmOutput
}

type GetApplicationSpecSourceHelmArgs struct {
	// File parameters for the helm template.
	FileParameters GetApplicationSpecSourceHelmFileParameterArrayInput `pulumi:"fileParameters"`
	// Prevents 'helm template' from failing when `valueFiles` do not exist locally by not appending them to 'helm template --values'.
	IgnoreMissingValueFiles pulumi.BoolInput `pulumi:"ignoreMissingValueFiles"`
	// Helm parameters which are passed to the helm template command upon manifest generation.
	Parameters GetApplicationSpecSourceHelmParameterArrayInput `pulumi:"parameters"`
	// If true then adds '--pass-credentials' to Helm commands to pass credentials to all domains.
	PassCredentials pulumi.BoolInput `pulumi:"passCredentials"`
	// Helm release name. If omitted it will use the application name.
	ReleaseName pulumi.StringInput `pulumi:"releaseName"`
	// Whether to skip custom resource definition installation step (Helm's [--skip-crds](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/)).
	SkipCrds pulumi.BoolInput `pulumi:"skipCrds"`
	// List of Helm value files to use when generating a template.
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Helm values to be passed to 'helm template', typically defined as a Attribute.
	Values pulumi.StringInput `pulumi:"values"`
}

func (GetApplicationSpecSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceHelm)(nil)).Elem()
}

func (i GetApplicationSpecSourceHelmArgs) ToGetApplicationSpecSourceHelmOutput() GetApplicationSpecSourceHelmOutput {
	return i.ToGetApplicationSpecSourceHelmOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceHelmArgs) ToGetApplicationSpecSourceHelmOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceHelmOutput)
}

type GetApplicationSpecSourceHelmOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceHelm)(nil)).Elem()
}

func (o GetApplicationSpecSourceHelmOutput) ToGetApplicationSpecSourceHelmOutput() GetApplicationSpecSourceHelmOutput {
	return o
}

func (o GetApplicationSpecSourceHelmOutput) ToGetApplicationSpecSourceHelmOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmOutput {
	return o
}

// File parameters for the helm template.
func (o GetApplicationSpecSourceHelmOutput) FileParameters() GetApplicationSpecSourceHelmFileParameterArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelm) []GetApplicationSpecSourceHelmFileParameter {
		return v.FileParameters
	}).(GetApplicationSpecSourceHelmFileParameterArrayOutput)
}

// Prevents 'helm template' from failing when `valueFiles` do not exist locally by not appending them to 'helm template --values'.
func (o GetApplicationSpecSourceHelmOutput) IgnoreMissingValueFiles() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelm) bool { return v.IgnoreMissingValueFiles }).(pulumi.BoolOutput)
}

// Helm parameters which are passed to the helm template command upon manifest generation.
func (o GetApplicationSpecSourceHelmOutput) Parameters() GetApplicationSpecSourceHelmParameterArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelm) []GetApplicationSpecSourceHelmParameter { return v.Parameters }).(GetApplicationSpecSourceHelmParameterArrayOutput)
}

// If true then adds '--pass-credentials' to Helm commands to pass credentials to all domains.
func (o GetApplicationSpecSourceHelmOutput) PassCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelm) bool { return v.PassCredentials }).(pulumi.BoolOutput)
}

// Helm release name. If omitted it will use the application name.
func (o GetApplicationSpecSourceHelmOutput) ReleaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelm) string { return v.ReleaseName }).(pulumi.StringOutput)
}

// Whether to skip custom resource definition installation step (Helm's [--skip-crds](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/)).
func (o GetApplicationSpecSourceHelmOutput) SkipCrds() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelm) bool { return v.SkipCrds }).(pulumi.BoolOutput)
}

// List of Helm value files to use when generating a template.
func (o GetApplicationSpecSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Helm values to be passed to 'helm template', typically defined as a Attribute.
func (o GetApplicationSpecSourceHelmOutput) Values() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelm) string { return v.Values }).(pulumi.StringOutput)
}

type GetApplicationSpecSourceHelmFileParameter struct {
	// Name of the Helm parameters.
	Name string `pulumi:"name"`
	// Path to the file containing the values for the Helm parameters.
	Path string `pulumi:"path"`
}

// GetApplicationSpecSourceHelmFileParameterInput is an input type that accepts GetApplicationSpecSourceHelmFileParameterArgs and GetApplicationSpecSourceHelmFileParameterOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceHelmFileParameterInput` via:
//
//	GetApplicationSpecSourceHelmFileParameterArgs{...}
type GetApplicationSpecSourceHelmFileParameterInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceHelmFileParameterOutput() GetApplicationSpecSourceHelmFileParameterOutput
	ToGetApplicationSpecSourceHelmFileParameterOutputWithContext(context.Context) GetApplicationSpecSourceHelmFileParameterOutput
}

type GetApplicationSpecSourceHelmFileParameterArgs struct {
	// Name of the Helm parameters.
	Name pulumi.StringInput `pulumi:"name"`
	// Path to the file containing the values for the Helm parameters.
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetApplicationSpecSourceHelmFileParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GetApplicationSpecSourceHelmFileParameterArgs) ToGetApplicationSpecSourceHelmFileParameterOutput() GetApplicationSpecSourceHelmFileParameterOutput {
	return i.ToGetApplicationSpecSourceHelmFileParameterOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceHelmFileParameterArgs) ToGetApplicationSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmFileParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceHelmFileParameterOutput)
}

// GetApplicationSpecSourceHelmFileParameterArrayInput is an input type that accepts GetApplicationSpecSourceHelmFileParameterArray and GetApplicationSpecSourceHelmFileParameterArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceHelmFileParameterArrayInput` via:
//
//	GetApplicationSpecSourceHelmFileParameterArray{ GetApplicationSpecSourceHelmFileParameterArgs{...} }
type GetApplicationSpecSourceHelmFileParameterArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceHelmFileParameterArrayOutput() GetApplicationSpecSourceHelmFileParameterArrayOutput
	ToGetApplicationSpecSourceHelmFileParameterArrayOutputWithContext(context.Context) GetApplicationSpecSourceHelmFileParameterArrayOutput
}

type GetApplicationSpecSourceHelmFileParameterArray []GetApplicationSpecSourceHelmFileParameterInput

func (GetApplicationSpecSourceHelmFileParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GetApplicationSpecSourceHelmFileParameterArray) ToGetApplicationSpecSourceHelmFileParameterArrayOutput() GetApplicationSpecSourceHelmFileParameterArrayOutput {
	return i.ToGetApplicationSpecSourceHelmFileParameterArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceHelmFileParameterArray) ToGetApplicationSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmFileParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceHelmFileParameterArrayOutput)
}

type GetApplicationSpecSourceHelmFileParameterOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceHelmFileParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GetApplicationSpecSourceHelmFileParameterOutput) ToGetApplicationSpecSourceHelmFileParameterOutput() GetApplicationSpecSourceHelmFileParameterOutput {
	return o
}

func (o GetApplicationSpecSourceHelmFileParameterOutput) ToGetApplicationSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmFileParameterOutput {
	return o
}

// Name of the Helm parameters.
func (o GetApplicationSpecSourceHelmFileParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelmFileParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Path to the file containing the values for the Helm parameters.
func (o GetApplicationSpecSourceHelmFileParameterOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelmFileParameter) string { return v.Path }).(pulumi.StringOutput)
}

type GetApplicationSpecSourceHelmFileParameterArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceHelmFileParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GetApplicationSpecSourceHelmFileParameterArrayOutput) ToGetApplicationSpecSourceHelmFileParameterArrayOutput() GetApplicationSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GetApplicationSpecSourceHelmFileParameterArrayOutput) ToGetApplicationSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GetApplicationSpecSourceHelmFileParameterArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecSourceHelmFileParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecSourceHelmFileParameter {
		return vs[0].([]GetApplicationSpecSourceHelmFileParameter)[vs[1].(int)]
	}).(GetApplicationSpecSourceHelmFileParameterOutput)
}

type GetApplicationSpecSourceHelmParameter struct {
	// Determines whether to tell Helm to interpret booleans and numbers as strings.
	ForceString bool `pulumi:"forceString"`
	// Name of the Helm parameters.
	Name string `pulumi:"name"`
	// Value of the Helm parameters.
	Value string `pulumi:"value"`
}

// GetApplicationSpecSourceHelmParameterInput is an input type that accepts GetApplicationSpecSourceHelmParameterArgs and GetApplicationSpecSourceHelmParameterOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceHelmParameterInput` via:
//
//	GetApplicationSpecSourceHelmParameterArgs{...}
type GetApplicationSpecSourceHelmParameterInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceHelmParameterOutput() GetApplicationSpecSourceHelmParameterOutput
	ToGetApplicationSpecSourceHelmParameterOutputWithContext(context.Context) GetApplicationSpecSourceHelmParameterOutput
}

type GetApplicationSpecSourceHelmParameterArgs struct {
	// Determines whether to tell Helm to interpret booleans and numbers as strings.
	ForceString pulumi.BoolInput `pulumi:"forceString"`
	// Name of the Helm parameters.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the Helm parameters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationSpecSourceHelmParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (i GetApplicationSpecSourceHelmParameterArgs) ToGetApplicationSpecSourceHelmParameterOutput() GetApplicationSpecSourceHelmParameterOutput {
	return i.ToGetApplicationSpecSourceHelmParameterOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceHelmParameterArgs) ToGetApplicationSpecSourceHelmParameterOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceHelmParameterOutput)
}

// GetApplicationSpecSourceHelmParameterArrayInput is an input type that accepts GetApplicationSpecSourceHelmParameterArray and GetApplicationSpecSourceHelmParameterArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceHelmParameterArrayInput` via:
//
//	GetApplicationSpecSourceHelmParameterArray{ GetApplicationSpecSourceHelmParameterArgs{...} }
type GetApplicationSpecSourceHelmParameterArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceHelmParameterArrayOutput() GetApplicationSpecSourceHelmParameterArrayOutput
	ToGetApplicationSpecSourceHelmParameterArrayOutputWithContext(context.Context) GetApplicationSpecSourceHelmParameterArrayOutput
}

type GetApplicationSpecSourceHelmParameterArray []GetApplicationSpecSourceHelmParameterInput

func (GetApplicationSpecSourceHelmParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (i GetApplicationSpecSourceHelmParameterArray) ToGetApplicationSpecSourceHelmParameterArrayOutput() GetApplicationSpecSourceHelmParameterArrayOutput {
	return i.ToGetApplicationSpecSourceHelmParameterArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceHelmParameterArray) ToGetApplicationSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceHelmParameterArrayOutput)
}

type GetApplicationSpecSourceHelmParameterOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceHelmParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (o GetApplicationSpecSourceHelmParameterOutput) ToGetApplicationSpecSourceHelmParameterOutput() GetApplicationSpecSourceHelmParameterOutput {
	return o
}

func (o GetApplicationSpecSourceHelmParameterOutput) ToGetApplicationSpecSourceHelmParameterOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmParameterOutput {
	return o
}

// Determines whether to tell Helm to interpret booleans and numbers as strings.
func (o GetApplicationSpecSourceHelmParameterOutput) ForceString() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelmParameter) bool { return v.ForceString }).(pulumi.BoolOutput)
}

// Name of the Helm parameters.
func (o GetApplicationSpecSourceHelmParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelmParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the Helm parameters.
func (o GetApplicationSpecSourceHelmParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceHelmParameter) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationSpecSourceHelmParameterArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceHelmParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (o GetApplicationSpecSourceHelmParameterArrayOutput) ToGetApplicationSpecSourceHelmParameterArrayOutput() GetApplicationSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GetApplicationSpecSourceHelmParameterArrayOutput) ToGetApplicationSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GetApplicationSpecSourceHelmParameterArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecSourceHelmParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecSourceHelmParameter {
		return vs[0].([]GetApplicationSpecSourceHelmParameter)[vs[1].(int)]
	}).(GetApplicationSpecSourceHelmParameterOutput)
}

type GetApplicationSpecSourceKustomize struct {
	// List of additional annotations to add to rendered manifests.
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// List of additional labels to add to rendered manifests.
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// List of Kustomize image override specifications.
	Images []string `pulumi:"images"`
	// Prefix appended to resources for Kustomize apps.
	NamePrefix string `pulumi:"namePrefix"`
	// Suffix appended to resources for Kustomize apps.
	NameSuffix string `pulumi:"nameSuffix"`
	// Version of Kustomize to use for rendering manifests.
	Version string `pulumi:"version"`
}

// GetApplicationSpecSourceKustomizeInput is an input type that accepts GetApplicationSpecSourceKustomizeArgs and GetApplicationSpecSourceKustomizeOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourceKustomizeInput` via:
//
//	GetApplicationSpecSourceKustomizeArgs{...}
type GetApplicationSpecSourceKustomizeInput interface {
	pulumi.Input

	ToGetApplicationSpecSourceKustomizeOutput() GetApplicationSpecSourceKustomizeOutput
	ToGetApplicationSpecSourceKustomizeOutputWithContext(context.Context) GetApplicationSpecSourceKustomizeOutput
}

type GetApplicationSpecSourceKustomizeArgs struct {
	// List of additional annotations to add to rendered manifests.
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// List of additional labels to add to rendered manifests.
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// List of Kustomize image override specifications.
	Images pulumi.StringArrayInput `pulumi:"images"`
	// Prefix appended to resources for Kustomize apps.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// Suffix appended to resources for Kustomize apps.
	NameSuffix pulumi.StringInput `pulumi:"nameSuffix"`
	// Version of Kustomize to use for rendering manifests.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetApplicationSpecSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i GetApplicationSpecSourceKustomizeArgs) ToGetApplicationSpecSourceKustomizeOutput() GetApplicationSpecSourceKustomizeOutput {
	return i.ToGetApplicationSpecSourceKustomizeOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourceKustomizeArgs) ToGetApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) GetApplicationSpecSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourceKustomizeOutput)
}

type GetApplicationSpecSourceKustomizeOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o GetApplicationSpecSourceKustomizeOutput) ToGetApplicationSpecSourceKustomizeOutput() GetApplicationSpecSourceKustomizeOutput {
	return o
}

func (o GetApplicationSpecSourceKustomizeOutput) ToGetApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) GetApplicationSpecSourceKustomizeOutput {
	return o
}

// List of additional annotations to add to rendered manifests.
func (o GetApplicationSpecSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceKustomize) map[string]string { return v.CommonAnnotations }).(pulumi.StringMapOutput)
}

// List of additional labels to add to rendered manifests.
func (o GetApplicationSpecSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceKustomize) map[string]string { return v.CommonLabels }).(pulumi.StringMapOutput)
}

// List of Kustomize image override specifications.
func (o GetApplicationSpecSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// Prefix appended to resources for Kustomize apps.
func (o GetApplicationSpecSourceKustomizeOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceKustomize) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// Suffix appended to resources for Kustomize apps.
func (o GetApplicationSpecSourceKustomizeOutput) NameSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceKustomize) string { return v.NameSuffix }).(pulumi.StringOutput)
}

// Version of Kustomize to use for rendering manifests.
func (o GetApplicationSpecSourceKustomizeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourceKustomize) string { return v.Version }).(pulumi.StringOutput)
}

type GetApplicationSpecSourcePlugin struct {
	// Environment variables passed to the plugin.
	Envs []GetApplicationSpecSourcePluginEnv `pulumi:"envs"`
	// Name of the plugin. Only set the plugin name if the plugin is defined in `argocd-cm`. If the plugin is defined as a sidecar, omit the name. The plugin will be automatically matched with the Application according to the plugin's discovery rules.
	Name string `pulumi:"name"`
	// Parameters to supply to config management plugin.
	Parameters []GetApplicationSpecSourcePluginParameter `pulumi:"parameters"`
}

// GetApplicationSpecSourcePluginInput is an input type that accepts GetApplicationSpecSourcePluginArgs and GetApplicationSpecSourcePluginOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourcePluginInput` via:
//
//	GetApplicationSpecSourcePluginArgs{...}
type GetApplicationSpecSourcePluginInput interface {
	pulumi.Input

	ToGetApplicationSpecSourcePluginOutput() GetApplicationSpecSourcePluginOutput
	ToGetApplicationSpecSourcePluginOutputWithContext(context.Context) GetApplicationSpecSourcePluginOutput
}

type GetApplicationSpecSourcePluginArgs struct {
	// Environment variables passed to the plugin.
	Envs GetApplicationSpecSourcePluginEnvArrayInput `pulumi:"envs"`
	// Name of the plugin. Only set the plugin name if the plugin is defined in `argocd-cm`. If the plugin is defined as a sidecar, omit the name. The plugin will be automatically matched with the Application according to the plugin's discovery rules.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters to supply to config management plugin.
	Parameters GetApplicationSpecSourcePluginParameterArrayInput `pulumi:"parameters"`
}

func (GetApplicationSpecSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i GetApplicationSpecSourcePluginArgs) ToGetApplicationSpecSourcePluginOutput() GetApplicationSpecSourcePluginOutput {
	return i.ToGetApplicationSpecSourcePluginOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourcePluginArgs) ToGetApplicationSpecSourcePluginOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourcePluginOutput)
}

type GetApplicationSpecSourcePluginOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o GetApplicationSpecSourcePluginOutput) ToGetApplicationSpecSourcePluginOutput() GetApplicationSpecSourcePluginOutput {
	return o
}

func (o GetApplicationSpecSourcePluginOutput) ToGetApplicationSpecSourcePluginOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginOutput {
	return o
}

// Environment variables passed to the plugin.
func (o GetApplicationSpecSourcePluginOutput) Envs() GetApplicationSpecSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePlugin) []GetApplicationSpecSourcePluginEnv { return v.Envs }).(GetApplicationSpecSourcePluginEnvArrayOutput)
}

// Name of the plugin. Only set the plugin name if the plugin is defined in `argocd-cm`. If the plugin is defined as a sidecar, omit the name. The plugin will be automatically matched with the Application according to the plugin's discovery rules.
func (o GetApplicationSpecSourcePluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePlugin) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters to supply to config management plugin.
func (o GetApplicationSpecSourcePluginOutput) Parameters() GetApplicationSpecSourcePluginParameterArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePlugin) []GetApplicationSpecSourcePluginParameter { return v.Parameters }).(GetApplicationSpecSourcePluginParameterArrayOutput)
}

type GetApplicationSpecSourcePluginEnv struct {
	// Name of the environment variable.
	Name string `pulumi:"name"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetApplicationSpecSourcePluginEnvInput is an input type that accepts GetApplicationSpecSourcePluginEnvArgs and GetApplicationSpecSourcePluginEnvOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourcePluginEnvInput` via:
//
//	GetApplicationSpecSourcePluginEnvArgs{...}
type GetApplicationSpecSourcePluginEnvInput interface {
	pulumi.Input

	ToGetApplicationSpecSourcePluginEnvOutput() GetApplicationSpecSourcePluginEnvOutput
	ToGetApplicationSpecSourcePluginEnvOutputWithContext(context.Context) GetApplicationSpecSourcePluginEnvOutput
}

type GetApplicationSpecSourcePluginEnvArgs struct {
	// Name of the environment variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationSpecSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i GetApplicationSpecSourcePluginEnvArgs) ToGetApplicationSpecSourcePluginEnvOutput() GetApplicationSpecSourcePluginEnvOutput {
	return i.ToGetApplicationSpecSourcePluginEnvOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourcePluginEnvArgs) ToGetApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourcePluginEnvOutput)
}

// GetApplicationSpecSourcePluginEnvArrayInput is an input type that accepts GetApplicationSpecSourcePluginEnvArray and GetApplicationSpecSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourcePluginEnvArrayInput` via:
//
//	GetApplicationSpecSourcePluginEnvArray{ GetApplicationSpecSourcePluginEnvArgs{...} }
type GetApplicationSpecSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecSourcePluginEnvArrayOutput() GetApplicationSpecSourcePluginEnvArrayOutput
	ToGetApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Context) GetApplicationSpecSourcePluginEnvArrayOutput
}

type GetApplicationSpecSourcePluginEnvArray []GetApplicationSpecSourcePluginEnvInput

func (GetApplicationSpecSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i GetApplicationSpecSourcePluginEnvArray) ToGetApplicationSpecSourcePluginEnvArrayOutput() GetApplicationSpecSourcePluginEnvArrayOutput {
	return i.ToGetApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourcePluginEnvArray) ToGetApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourcePluginEnvArrayOutput)
}

type GetApplicationSpecSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o GetApplicationSpecSourcePluginEnvOutput) ToGetApplicationSpecSourcePluginEnvOutput() GetApplicationSpecSourcePluginEnvOutput {
	return o
}

func (o GetApplicationSpecSourcePluginEnvOutput) ToGetApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginEnvOutput {
	return o
}

// Name of the environment variable.
func (o GetApplicationSpecSourcePluginEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePluginEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetApplicationSpecSourcePluginEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePluginEnv) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationSpecSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o GetApplicationSpecSourcePluginEnvArrayOutput) ToGetApplicationSpecSourcePluginEnvArrayOutput() GetApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GetApplicationSpecSourcePluginEnvArrayOutput) ToGetApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GetApplicationSpecSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecSourcePluginEnv {
		return vs[0].([]GetApplicationSpecSourcePluginEnv)[vs[1].(int)]
	}).(GetApplicationSpecSourcePluginEnvOutput)
}

type GetApplicationSpecSourcePluginParameter struct {
	// Value of an array type parameters.
	Arrays []string `pulumi:"arrays"`
	// Value of a map type parameters.
	Map map[string]string `pulumi:"map"`
	// Name identifying a parameters.
	Name string `pulumi:"name"`
	// Value of a string type parameters.
	String string `pulumi:"string"`
}

// GetApplicationSpecSourcePluginParameterInput is an input type that accepts GetApplicationSpecSourcePluginParameterArgs and GetApplicationSpecSourcePluginParameterOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourcePluginParameterInput` via:
//
//	GetApplicationSpecSourcePluginParameterArgs{...}
type GetApplicationSpecSourcePluginParameterInput interface {
	pulumi.Input

	ToGetApplicationSpecSourcePluginParameterOutput() GetApplicationSpecSourcePluginParameterOutput
	ToGetApplicationSpecSourcePluginParameterOutputWithContext(context.Context) GetApplicationSpecSourcePluginParameterOutput
}

type GetApplicationSpecSourcePluginParameterArgs struct {
	// Value of an array type parameters.
	Arrays pulumi.StringArrayInput `pulumi:"arrays"`
	// Value of a map type parameters.
	Map pulumi.StringMapInput `pulumi:"map"`
	// Name identifying a parameters.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of a string type parameters.
	String pulumi.StringInput `pulumi:"string"`
}

func (GetApplicationSpecSourcePluginParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourcePluginParameter)(nil)).Elem()
}

func (i GetApplicationSpecSourcePluginParameterArgs) ToGetApplicationSpecSourcePluginParameterOutput() GetApplicationSpecSourcePluginParameterOutput {
	return i.ToGetApplicationSpecSourcePluginParameterOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourcePluginParameterArgs) ToGetApplicationSpecSourcePluginParameterOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourcePluginParameterOutput)
}

// GetApplicationSpecSourcePluginParameterArrayInput is an input type that accepts GetApplicationSpecSourcePluginParameterArray and GetApplicationSpecSourcePluginParameterArrayOutput values.
// You can construct a concrete instance of `GetApplicationSpecSourcePluginParameterArrayInput` via:
//
//	GetApplicationSpecSourcePluginParameterArray{ GetApplicationSpecSourcePluginParameterArgs{...} }
type GetApplicationSpecSourcePluginParameterArrayInput interface {
	pulumi.Input

	ToGetApplicationSpecSourcePluginParameterArrayOutput() GetApplicationSpecSourcePluginParameterArrayOutput
	ToGetApplicationSpecSourcePluginParameterArrayOutputWithContext(context.Context) GetApplicationSpecSourcePluginParameterArrayOutput
}

type GetApplicationSpecSourcePluginParameterArray []GetApplicationSpecSourcePluginParameterInput

func (GetApplicationSpecSourcePluginParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourcePluginParameter)(nil)).Elem()
}

func (i GetApplicationSpecSourcePluginParameterArray) ToGetApplicationSpecSourcePluginParameterArrayOutput() GetApplicationSpecSourcePluginParameterArrayOutput {
	return i.ToGetApplicationSpecSourcePluginParameterArrayOutputWithContext(context.Background())
}

func (i GetApplicationSpecSourcePluginParameterArray) ToGetApplicationSpecSourcePluginParameterArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSourcePluginParameterArrayOutput)
}

type GetApplicationSpecSourcePluginParameterOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourcePluginParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSourcePluginParameter)(nil)).Elem()
}

func (o GetApplicationSpecSourcePluginParameterOutput) ToGetApplicationSpecSourcePluginParameterOutput() GetApplicationSpecSourcePluginParameterOutput {
	return o
}

func (o GetApplicationSpecSourcePluginParameterOutput) ToGetApplicationSpecSourcePluginParameterOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginParameterOutput {
	return o
}

// Value of an array type parameters.
func (o GetApplicationSpecSourcePluginParameterOutput) Arrays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePluginParameter) []string { return v.Arrays }).(pulumi.StringArrayOutput)
}

// Value of a map type parameters.
func (o GetApplicationSpecSourcePluginParameterOutput) Map() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePluginParameter) map[string]string { return v.Map }).(pulumi.StringMapOutput)
}

// Name identifying a parameters.
func (o GetApplicationSpecSourcePluginParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePluginParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Value of a string type parameters.
func (o GetApplicationSpecSourcePluginParameterOutput) String() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSourcePluginParameter) string { return v.String }).(pulumi.StringOutput)
}

type GetApplicationSpecSourcePluginParameterArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSourcePluginParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSpecSourcePluginParameter)(nil)).Elem()
}

func (o GetApplicationSpecSourcePluginParameterArrayOutput) ToGetApplicationSpecSourcePluginParameterArrayOutput() GetApplicationSpecSourcePluginParameterArrayOutput {
	return o
}

func (o GetApplicationSpecSourcePluginParameterArrayOutput) ToGetApplicationSpecSourcePluginParameterArrayOutputWithContext(ctx context.Context) GetApplicationSpecSourcePluginParameterArrayOutput {
	return o
}

func (o GetApplicationSpecSourcePluginParameterArrayOutput) Index(i pulumi.IntInput) GetApplicationSpecSourcePluginParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSpecSourcePluginParameter {
		return vs[0].([]GetApplicationSpecSourcePluginParameter)[vs[1].(int)]
	}).(GetApplicationSpecSourcePluginParameterOutput)
}

type GetApplicationSpecSyncPolicy struct {
	// Whether to automatically keep an application synced to the target revision.
	Automated GetApplicationSpecSyncPolicyAutomated `pulumi:"automated"`
	// Controls failed sync retry behavior.
	Retry GetApplicationSpecSyncPolicyRetry `pulumi:"retry"`
	// List of sync options. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/sync-options/.
	SyncOptions []string `pulumi:"syncOptions"`
}

// GetApplicationSpecSyncPolicyInput is an input type that accepts GetApplicationSpecSyncPolicyArgs and GetApplicationSpecSyncPolicyOutput values.
// You can construct a concrete instance of `GetApplicationSpecSyncPolicyInput` via:
//
//	GetApplicationSpecSyncPolicyArgs{...}
type GetApplicationSpecSyncPolicyInput interface {
	pulumi.Input

	ToGetApplicationSpecSyncPolicyOutput() GetApplicationSpecSyncPolicyOutput
	ToGetApplicationSpecSyncPolicyOutputWithContext(context.Context) GetApplicationSpecSyncPolicyOutput
}

type GetApplicationSpecSyncPolicyArgs struct {
	// Whether to automatically keep an application synced to the target revision.
	Automated GetApplicationSpecSyncPolicyAutomatedInput `pulumi:"automated"`
	// Controls failed sync retry behavior.
	Retry GetApplicationSpecSyncPolicyRetryInput `pulumi:"retry"`
	// List of sync options. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/sync-options/.
	SyncOptions pulumi.StringArrayInput `pulumi:"syncOptions"`
}

func (GetApplicationSpecSyncPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i GetApplicationSpecSyncPolicyArgs) ToGetApplicationSpecSyncPolicyOutput() GetApplicationSpecSyncPolicyOutput {
	return i.ToGetApplicationSpecSyncPolicyOutputWithContext(context.Background())
}

func (i GetApplicationSpecSyncPolicyArgs) ToGetApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) GetApplicationSpecSyncPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSyncPolicyOutput)
}

type GetApplicationSpecSyncPolicyOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSyncPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o GetApplicationSpecSyncPolicyOutput) ToGetApplicationSpecSyncPolicyOutput() GetApplicationSpecSyncPolicyOutput {
	return o
}

func (o GetApplicationSpecSyncPolicyOutput) ToGetApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) GetApplicationSpecSyncPolicyOutput {
	return o
}

// Whether to automatically keep an application synced to the target revision.
func (o GetApplicationSpecSyncPolicyOutput) Automated() GetApplicationSpecSyncPolicyAutomatedOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicy) GetApplicationSpecSyncPolicyAutomated { return v.Automated }).(GetApplicationSpecSyncPolicyAutomatedOutput)
}

// Controls failed sync retry behavior.
func (o GetApplicationSpecSyncPolicyOutput) Retry() GetApplicationSpecSyncPolicyRetryOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicy) GetApplicationSpecSyncPolicyRetry { return v.Retry }).(GetApplicationSpecSyncPolicyRetryOutput)
}

// List of sync options. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/sync-options/.
func (o GetApplicationSpecSyncPolicyOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicy) []string { return v.SyncOptions }).(pulumi.StringArrayOutput)
}

type GetApplicationSpecSyncPolicyAutomated struct {
	// Allows apps have zero live resources.
	AllowEmpty bool `pulumi:"allowEmpty"`
	// Whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync.
	Prune bool `pulumi:"prune"`
	// Whether to revert resources back to their desired state upon modification in the cluster.
	SelfHeal bool `pulumi:"selfHeal"`
}

// GetApplicationSpecSyncPolicyAutomatedInput is an input type that accepts GetApplicationSpecSyncPolicyAutomatedArgs and GetApplicationSpecSyncPolicyAutomatedOutput values.
// You can construct a concrete instance of `GetApplicationSpecSyncPolicyAutomatedInput` via:
//
//	GetApplicationSpecSyncPolicyAutomatedArgs{...}
type GetApplicationSpecSyncPolicyAutomatedInput interface {
	pulumi.Input

	ToGetApplicationSpecSyncPolicyAutomatedOutput() GetApplicationSpecSyncPolicyAutomatedOutput
	ToGetApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Context) GetApplicationSpecSyncPolicyAutomatedOutput
}

type GetApplicationSpecSyncPolicyAutomatedArgs struct {
	// Allows apps have zero live resources.
	AllowEmpty pulumi.BoolInput `pulumi:"allowEmpty"`
	// Whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync.
	Prune pulumi.BoolInput `pulumi:"prune"`
	// Whether to revert resources back to their desired state upon modification in the cluster.
	SelfHeal pulumi.BoolInput `pulumi:"selfHeal"`
}

func (GetApplicationSpecSyncPolicyAutomatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i GetApplicationSpecSyncPolicyAutomatedArgs) ToGetApplicationSpecSyncPolicyAutomatedOutput() GetApplicationSpecSyncPolicyAutomatedOutput {
	return i.ToGetApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Background())
}

func (i GetApplicationSpecSyncPolicyAutomatedArgs) ToGetApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GetApplicationSpecSyncPolicyAutomatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSyncPolicyAutomatedOutput)
}

type GetApplicationSpecSyncPolicyAutomatedOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSyncPolicyAutomatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GetApplicationSpecSyncPolicyAutomatedOutput) ToGetApplicationSpecSyncPolicyAutomatedOutput() GetApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

func (o GetApplicationSpecSyncPolicyAutomatedOutput) ToGetApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GetApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

// Allows apps have zero live resources.
func (o GetApplicationSpecSyncPolicyAutomatedOutput) AllowEmpty() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicyAutomated) bool { return v.AllowEmpty }).(pulumi.BoolOutput)
}

// Whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync.
func (o GetApplicationSpecSyncPolicyAutomatedOutput) Prune() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicyAutomated) bool { return v.Prune }).(pulumi.BoolOutput)
}

// Whether to revert resources back to their desired state upon modification in the cluster.
func (o GetApplicationSpecSyncPolicyAutomatedOutput) SelfHeal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicyAutomated) bool { return v.SelfHeal }).(pulumi.BoolOutput)
}

type GetApplicationSpecSyncPolicyRetry struct {
	// Controls how to backoff on subsequent retries of failed syncs.
	Backoff GetApplicationSpecSyncPolicyRetryBackoff `pulumi:"backoff"`
	// Maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit int `pulumi:"limit"`
}

// GetApplicationSpecSyncPolicyRetryInput is an input type that accepts GetApplicationSpecSyncPolicyRetryArgs and GetApplicationSpecSyncPolicyRetryOutput values.
// You can construct a concrete instance of `GetApplicationSpecSyncPolicyRetryInput` via:
//
//	GetApplicationSpecSyncPolicyRetryArgs{...}
type GetApplicationSpecSyncPolicyRetryInput interface {
	pulumi.Input

	ToGetApplicationSpecSyncPolicyRetryOutput() GetApplicationSpecSyncPolicyRetryOutput
	ToGetApplicationSpecSyncPolicyRetryOutputWithContext(context.Context) GetApplicationSpecSyncPolicyRetryOutput
}

type GetApplicationSpecSyncPolicyRetryArgs struct {
	// Controls how to backoff on subsequent retries of failed syncs.
	Backoff GetApplicationSpecSyncPolicyRetryBackoffInput `pulumi:"backoff"`
	// Maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit pulumi.IntInput `pulumi:"limit"`
}

func (GetApplicationSpecSyncPolicyRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i GetApplicationSpecSyncPolicyRetryArgs) ToGetApplicationSpecSyncPolicyRetryOutput() GetApplicationSpecSyncPolicyRetryOutput {
	return i.ToGetApplicationSpecSyncPolicyRetryOutputWithContext(context.Background())
}

func (i GetApplicationSpecSyncPolicyRetryArgs) ToGetApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GetApplicationSpecSyncPolicyRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSyncPolicyRetryOutput)
}

type GetApplicationSpecSyncPolicyRetryOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSyncPolicyRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GetApplicationSpecSyncPolicyRetryOutput) ToGetApplicationSpecSyncPolicyRetryOutput() GetApplicationSpecSyncPolicyRetryOutput {
	return o
}

func (o GetApplicationSpecSyncPolicyRetryOutput) ToGetApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GetApplicationSpecSyncPolicyRetryOutput {
	return o
}

// Controls how to backoff on subsequent retries of failed syncs.
func (o GetApplicationSpecSyncPolicyRetryOutput) Backoff() GetApplicationSpecSyncPolicyRetryBackoffOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicyRetry) GetApplicationSpecSyncPolicyRetryBackoff { return v.Backoff }).(GetApplicationSpecSyncPolicyRetryBackoffOutput)
}

// Maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o GetApplicationSpecSyncPolicyRetryOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicyRetry) int { return v.Limit }).(pulumi.IntOutput)
}

type GetApplicationSpecSyncPolicyRetryBackoff struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
	Duration string `pulumi:"duration"`
	// Factor to multiply the base duration after each failed retry.
	Factor int `pulumi:"factor"`
	// Maximum amount of time allowed for the backoff strategy. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
	MaxDuration string `pulumi:"maxDuration"`
}

// GetApplicationSpecSyncPolicyRetryBackoffInput is an input type that accepts GetApplicationSpecSyncPolicyRetryBackoffArgs and GetApplicationSpecSyncPolicyRetryBackoffOutput values.
// You can construct a concrete instance of `GetApplicationSpecSyncPolicyRetryBackoffInput` via:
//
//	GetApplicationSpecSyncPolicyRetryBackoffArgs{...}
type GetApplicationSpecSyncPolicyRetryBackoffInput interface {
	pulumi.Input

	ToGetApplicationSpecSyncPolicyRetryBackoffOutput() GetApplicationSpecSyncPolicyRetryBackoffOutput
	ToGetApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Context) GetApplicationSpecSyncPolicyRetryBackoffOutput
}

type GetApplicationSpecSyncPolicyRetryBackoffArgs struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
	Duration pulumi.StringInput `pulumi:"duration"`
	// Factor to multiply the base duration after each failed retry.
	Factor pulumi.IntInput `pulumi:"factor"`
	// Maximum amount of time allowed for the backoff strategy. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
	MaxDuration pulumi.StringInput `pulumi:"maxDuration"`
}

func (GetApplicationSpecSyncPolicyRetryBackoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i GetApplicationSpecSyncPolicyRetryBackoffArgs) ToGetApplicationSpecSyncPolicyRetryBackoffOutput() GetApplicationSpecSyncPolicyRetryBackoffOutput {
	return i.ToGetApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Background())
}

func (i GetApplicationSpecSyncPolicyRetryBackoffArgs) ToGetApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GetApplicationSpecSyncPolicyRetryBackoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSpecSyncPolicyRetryBackoffOutput)
}

type GetApplicationSpecSyncPolicyRetryBackoffOutput struct{ *pulumi.OutputState }

func (GetApplicationSpecSyncPolicyRetryBackoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GetApplicationSpecSyncPolicyRetryBackoffOutput) ToGetApplicationSpecSyncPolicyRetryBackoffOutput() GetApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o GetApplicationSpecSyncPolicyRetryBackoffOutput) ToGetApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GetApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
func (o GetApplicationSpecSyncPolicyRetryBackoffOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicyRetryBackoff) string { return v.Duration }).(pulumi.StringOutput)
}

// Factor to multiply the base duration after each failed retry.
func (o GetApplicationSpecSyncPolicyRetryBackoffOutput) Factor() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicyRetryBackoff) int { return v.Factor }).(pulumi.IntOutput)
}

// Maximum amount of time allowed for the backoff strategy. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
func (o GetApplicationSpecSyncPolicyRetryBackoffOutput) MaxDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSpecSyncPolicyRetryBackoff) string { return v.MaxDuration }).(pulumi.StringOutput)
}

type GetApplicationStatus struct {
	// List of currently observed application conditions.
	Conditions []GetApplicationStatusCondition `pulumi:"conditions"`
	// Application's current health status.
	Health GetApplicationStatusHealth `pulumi:"health"`
	// Information about any ongoing operations, such as a sync.
	OperationState GetApplicationStatusOperationState `pulumi:"operationState"`
	// When the application state was reconciled using the latest git version.
	ReconciledAt string `pulumi:"reconciledAt"`
	// List of Kubernetes resources managed by this application.
	Resources []GetApplicationStatusResource `pulumi:"resources"`
	// List of URLs and container images used by this application.
	Summary GetApplicationStatusSummary `pulumi:"summary"`
	// Application's current sync status
	Sync GetApplicationStatusSync `pulumi:"sync"`
}

// GetApplicationStatusInput is an input type that accepts GetApplicationStatusArgs and GetApplicationStatusOutput values.
// You can construct a concrete instance of `GetApplicationStatusInput` via:
//
//	GetApplicationStatusArgs{...}
type GetApplicationStatusInput interface {
	pulumi.Input

	ToGetApplicationStatusOutput() GetApplicationStatusOutput
	ToGetApplicationStatusOutputWithContext(context.Context) GetApplicationStatusOutput
}

type GetApplicationStatusArgs struct {
	// List of currently observed application conditions.
	Conditions GetApplicationStatusConditionArrayInput `pulumi:"conditions"`
	// Application's current health status.
	Health GetApplicationStatusHealthInput `pulumi:"health"`
	// Information about any ongoing operations, such as a sync.
	OperationState GetApplicationStatusOperationStateInput `pulumi:"operationState"`
	// When the application state was reconciled using the latest git version.
	ReconciledAt pulumi.StringInput `pulumi:"reconciledAt"`
	// List of Kubernetes resources managed by this application.
	Resources GetApplicationStatusResourceArrayInput `pulumi:"resources"`
	// List of URLs and container images used by this application.
	Summary GetApplicationStatusSummaryInput `pulumi:"summary"`
	// Application's current sync status
	Sync GetApplicationStatusSyncInput `pulumi:"sync"`
}

func (GetApplicationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatus)(nil)).Elem()
}

func (i GetApplicationStatusArgs) ToGetApplicationStatusOutput() GetApplicationStatusOutput {
	return i.ToGetApplicationStatusOutputWithContext(context.Background())
}

func (i GetApplicationStatusArgs) ToGetApplicationStatusOutputWithContext(ctx context.Context) GetApplicationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusOutput)
}

type GetApplicationStatusOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatus)(nil)).Elem()
}

func (o GetApplicationStatusOutput) ToGetApplicationStatusOutput() GetApplicationStatusOutput {
	return o
}

func (o GetApplicationStatusOutput) ToGetApplicationStatusOutputWithContext(ctx context.Context) GetApplicationStatusOutput {
	return o
}

// List of currently observed application conditions.
func (o GetApplicationStatusOutput) Conditions() GetApplicationStatusConditionArrayOutput {
	return o.ApplyT(func(v GetApplicationStatus) []GetApplicationStatusCondition { return v.Conditions }).(GetApplicationStatusConditionArrayOutput)
}

// Application's current health status.
func (o GetApplicationStatusOutput) Health() GetApplicationStatusHealthOutput {
	return o.ApplyT(func(v GetApplicationStatus) GetApplicationStatusHealth { return v.Health }).(GetApplicationStatusHealthOutput)
}

// Information about any ongoing operations, such as a sync.
func (o GetApplicationStatusOutput) OperationState() GetApplicationStatusOperationStateOutput {
	return o.ApplyT(func(v GetApplicationStatus) GetApplicationStatusOperationState { return v.OperationState }).(GetApplicationStatusOperationStateOutput)
}

// When the application state was reconciled using the latest git version.
func (o GetApplicationStatusOutput) ReconciledAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatus) string { return v.ReconciledAt }).(pulumi.StringOutput)
}

// List of Kubernetes resources managed by this application.
func (o GetApplicationStatusOutput) Resources() GetApplicationStatusResourceArrayOutput {
	return o.ApplyT(func(v GetApplicationStatus) []GetApplicationStatusResource { return v.Resources }).(GetApplicationStatusResourceArrayOutput)
}

// List of URLs and container images used by this application.
func (o GetApplicationStatusOutput) Summary() GetApplicationStatusSummaryOutput {
	return o.ApplyT(func(v GetApplicationStatus) GetApplicationStatusSummary { return v.Summary }).(GetApplicationStatusSummaryOutput)
}

// Application's current sync status
func (o GetApplicationStatusOutput) Sync() GetApplicationStatusSyncOutput {
	return o.ApplyT(func(v GetApplicationStatus) GetApplicationStatusSync { return v.Sync }).(GetApplicationStatusSyncOutput)
}

type GetApplicationStatusCondition struct {
	// The time the condition was last observed.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about condition.
	Message string `pulumi:"message"`
	// Application condition type.
	Type string `pulumi:"type"`
}

// GetApplicationStatusConditionInput is an input type that accepts GetApplicationStatusConditionArgs and GetApplicationStatusConditionOutput values.
// You can construct a concrete instance of `GetApplicationStatusConditionInput` via:
//
//	GetApplicationStatusConditionArgs{...}
type GetApplicationStatusConditionInput interface {
	pulumi.Input

	ToGetApplicationStatusConditionOutput() GetApplicationStatusConditionOutput
	ToGetApplicationStatusConditionOutputWithContext(context.Context) GetApplicationStatusConditionOutput
}

type GetApplicationStatusConditionArgs struct {
	// The time the condition was last observed.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about condition.
	Message pulumi.StringInput `pulumi:"message"`
	// Application condition type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApplicationStatusConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusCondition)(nil)).Elem()
}

func (i GetApplicationStatusConditionArgs) ToGetApplicationStatusConditionOutput() GetApplicationStatusConditionOutput {
	return i.ToGetApplicationStatusConditionOutputWithContext(context.Background())
}

func (i GetApplicationStatusConditionArgs) ToGetApplicationStatusConditionOutputWithContext(ctx context.Context) GetApplicationStatusConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusConditionOutput)
}

// GetApplicationStatusConditionArrayInput is an input type that accepts GetApplicationStatusConditionArray and GetApplicationStatusConditionArrayOutput values.
// You can construct a concrete instance of `GetApplicationStatusConditionArrayInput` via:
//
//	GetApplicationStatusConditionArray{ GetApplicationStatusConditionArgs{...} }
type GetApplicationStatusConditionArrayInput interface {
	pulumi.Input

	ToGetApplicationStatusConditionArrayOutput() GetApplicationStatusConditionArrayOutput
	ToGetApplicationStatusConditionArrayOutputWithContext(context.Context) GetApplicationStatusConditionArrayOutput
}

type GetApplicationStatusConditionArray []GetApplicationStatusConditionInput

func (GetApplicationStatusConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationStatusCondition)(nil)).Elem()
}

func (i GetApplicationStatusConditionArray) ToGetApplicationStatusConditionArrayOutput() GetApplicationStatusConditionArrayOutput {
	return i.ToGetApplicationStatusConditionArrayOutputWithContext(context.Background())
}

func (i GetApplicationStatusConditionArray) ToGetApplicationStatusConditionArrayOutputWithContext(ctx context.Context) GetApplicationStatusConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusConditionArrayOutput)
}

type GetApplicationStatusConditionOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusCondition)(nil)).Elem()
}

func (o GetApplicationStatusConditionOutput) ToGetApplicationStatusConditionOutput() GetApplicationStatusConditionOutput {
	return o
}

func (o GetApplicationStatusConditionOutput) ToGetApplicationStatusConditionOutputWithContext(ctx context.Context) GetApplicationStatusConditionOutput {
	return o
}

// The time the condition was last observed.
func (o GetApplicationStatusConditionOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusCondition) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// Human-readable message indicating details about condition.
func (o GetApplicationStatusConditionOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusCondition) string { return v.Message }).(pulumi.StringOutput)
}

// Application condition type.
func (o GetApplicationStatusConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusCondition) string { return v.Type }).(pulumi.StringOutput)
}

type GetApplicationStatusConditionArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationStatusCondition)(nil)).Elem()
}

func (o GetApplicationStatusConditionArrayOutput) ToGetApplicationStatusConditionArrayOutput() GetApplicationStatusConditionArrayOutput {
	return o
}

func (o GetApplicationStatusConditionArrayOutput) ToGetApplicationStatusConditionArrayOutputWithContext(ctx context.Context) GetApplicationStatusConditionArrayOutput {
	return o
}

func (o GetApplicationStatusConditionArrayOutput) Index(i pulumi.IntInput) GetApplicationStatusConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationStatusCondition {
		return vs[0].([]GetApplicationStatusCondition)[vs[1].(int)]
	}).(GetApplicationStatusConditionOutput)
}

type GetApplicationStatusHealth struct {
	// Human-readable informational message describing the health status.
	Message string `pulumi:"message"`
	// Status code of the application or resource.
	Status string `pulumi:"status"`
}

// GetApplicationStatusHealthInput is an input type that accepts GetApplicationStatusHealthArgs and GetApplicationStatusHealthOutput values.
// You can construct a concrete instance of `GetApplicationStatusHealthInput` via:
//
//	GetApplicationStatusHealthArgs{...}
type GetApplicationStatusHealthInput interface {
	pulumi.Input

	ToGetApplicationStatusHealthOutput() GetApplicationStatusHealthOutput
	ToGetApplicationStatusHealthOutputWithContext(context.Context) GetApplicationStatusHealthOutput
}

type GetApplicationStatusHealthArgs struct {
	// Human-readable informational message describing the health status.
	Message pulumi.StringInput `pulumi:"message"`
	// Status code of the application or resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetApplicationStatusHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusHealth)(nil)).Elem()
}

func (i GetApplicationStatusHealthArgs) ToGetApplicationStatusHealthOutput() GetApplicationStatusHealthOutput {
	return i.ToGetApplicationStatusHealthOutputWithContext(context.Background())
}

func (i GetApplicationStatusHealthArgs) ToGetApplicationStatusHealthOutputWithContext(ctx context.Context) GetApplicationStatusHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusHealthOutput)
}

type GetApplicationStatusHealthOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusHealth)(nil)).Elem()
}

func (o GetApplicationStatusHealthOutput) ToGetApplicationStatusHealthOutput() GetApplicationStatusHealthOutput {
	return o
}

func (o GetApplicationStatusHealthOutput) ToGetApplicationStatusHealthOutputWithContext(ctx context.Context) GetApplicationStatusHealthOutput {
	return o
}

// Human-readable informational message describing the health status.
func (o GetApplicationStatusHealthOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusHealth) string { return v.Message }).(pulumi.StringOutput)
}

// Status code of the application or resource.
func (o GetApplicationStatusHealthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusHealth) string { return v.Status }).(pulumi.StringOutput)
}

type GetApplicationStatusOperationState struct {
	// Time of operation completion.
	FinishedAt string `pulumi:"finishedAt"`
	// Any pertinent messages when attempting to perform operation (typically errors).
	Message string `pulumi:"message"`
	// The current phase of the operation.
	Phase string `pulumi:"phase"`
	// Count of operation retries.
	RetryCount int `pulumi:"retryCount"`
	// Time of operation start.
	StartedAt string `pulumi:"startedAt"`
}

// GetApplicationStatusOperationStateInput is an input type that accepts GetApplicationStatusOperationStateArgs and GetApplicationStatusOperationStateOutput values.
// You can construct a concrete instance of `GetApplicationStatusOperationStateInput` via:
//
//	GetApplicationStatusOperationStateArgs{...}
type GetApplicationStatusOperationStateInput interface {
	pulumi.Input

	ToGetApplicationStatusOperationStateOutput() GetApplicationStatusOperationStateOutput
	ToGetApplicationStatusOperationStateOutputWithContext(context.Context) GetApplicationStatusOperationStateOutput
}

type GetApplicationStatusOperationStateArgs struct {
	// Time of operation completion.
	FinishedAt pulumi.StringInput `pulumi:"finishedAt"`
	// Any pertinent messages when attempting to perform operation (typically errors).
	Message pulumi.StringInput `pulumi:"message"`
	// The current phase of the operation.
	Phase pulumi.StringInput `pulumi:"phase"`
	// Count of operation retries.
	RetryCount pulumi.IntInput `pulumi:"retryCount"`
	// Time of operation start.
	StartedAt pulumi.StringInput `pulumi:"startedAt"`
}

func (GetApplicationStatusOperationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusOperationState)(nil)).Elem()
}

func (i GetApplicationStatusOperationStateArgs) ToGetApplicationStatusOperationStateOutput() GetApplicationStatusOperationStateOutput {
	return i.ToGetApplicationStatusOperationStateOutputWithContext(context.Background())
}

func (i GetApplicationStatusOperationStateArgs) ToGetApplicationStatusOperationStateOutputWithContext(ctx context.Context) GetApplicationStatusOperationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusOperationStateOutput)
}

type GetApplicationStatusOperationStateOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusOperationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusOperationState)(nil)).Elem()
}

func (o GetApplicationStatusOperationStateOutput) ToGetApplicationStatusOperationStateOutput() GetApplicationStatusOperationStateOutput {
	return o
}

func (o GetApplicationStatusOperationStateOutput) ToGetApplicationStatusOperationStateOutputWithContext(ctx context.Context) GetApplicationStatusOperationStateOutput {
	return o
}

// Time of operation completion.
func (o GetApplicationStatusOperationStateOutput) FinishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusOperationState) string { return v.FinishedAt }).(pulumi.StringOutput)
}

// Any pertinent messages when attempting to perform operation (typically errors).
func (o GetApplicationStatusOperationStateOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusOperationState) string { return v.Message }).(pulumi.StringOutput)
}

// The current phase of the operation.
func (o GetApplicationStatusOperationStateOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusOperationState) string { return v.Phase }).(pulumi.StringOutput)
}

// Count of operation retries.
func (o GetApplicationStatusOperationStateOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationStatusOperationState) int { return v.RetryCount }).(pulumi.IntOutput)
}

// Time of operation start.
func (o GetApplicationStatusOperationStateOutput) StartedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusOperationState) string { return v.StartedAt }).(pulumi.StringOutput)
}

type GetApplicationStatusResource struct {
	// The Kubernetes resource Group.
	Group string `pulumi:"group"`
	// Resource health status.
	Health GetApplicationStatusResourceHealth `pulumi:"health"`
	// Indicates whether or not this resource has a hook annotation.
	Hook bool `pulumi:"hook"`
	// The Kubernetes resource Kind.
	Kind string `pulumi:"kind"`
	// The Kubernetes resource Name.
	Name string `pulumi:"name"`
	// The Kubernetes resource Namespace.
	Namespace string `pulumi:"namespace"`
	// Indicates if the resources requires pruning or not.
	RequiresPruning bool `pulumi:"requiresPruning"`
	// Resource sync status.
	Status string `pulumi:"status"`
	// Sync wave.
	SyncWave int `pulumi:"syncWave"`
	// The Kubernetes resource Version.
	Version string `pulumi:"version"`
}

// GetApplicationStatusResourceInput is an input type that accepts GetApplicationStatusResourceArgs and GetApplicationStatusResourceOutput values.
// You can construct a concrete instance of `GetApplicationStatusResourceInput` via:
//
//	GetApplicationStatusResourceArgs{...}
type GetApplicationStatusResourceInput interface {
	pulumi.Input

	ToGetApplicationStatusResourceOutput() GetApplicationStatusResourceOutput
	ToGetApplicationStatusResourceOutputWithContext(context.Context) GetApplicationStatusResourceOutput
}

type GetApplicationStatusResourceArgs struct {
	// The Kubernetes resource Group.
	Group pulumi.StringInput `pulumi:"group"`
	// Resource health status.
	Health GetApplicationStatusResourceHealthInput `pulumi:"health"`
	// Indicates whether or not this resource has a hook annotation.
	Hook pulumi.BoolInput `pulumi:"hook"`
	// The Kubernetes resource Kind.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The Kubernetes resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Kubernetes resource Namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Indicates if the resources requires pruning or not.
	RequiresPruning pulumi.BoolInput `pulumi:"requiresPruning"`
	// Resource sync status.
	Status pulumi.StringInput `pulumi:"status"`
	// Sync wave.
	SyncWave pulumi.IntInput `pulumi:"syncWave"`
	// The Kubernetes resource Version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetApplicationStatusResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusResource)(nil)).Elem()
}

func (i GetApplicationStatusResourceArgs) ToGetApplicationStatusResourceOutput() GetApplicationStatusResourceOutput {
	return i.ToGetApplicationStatusResourceOutputWithContext(context.Background())
}

func (i GetApplicationStatusResourceArgs) ToGetApplicationStatusResourceOutputWithContext(ctx context.Context) GetApplicationStatusResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusResourceOutput)
}

// GetApplicationStatusResourceArrayInput is an input type that accepts GetApplicationStatusResourceArray and GetApplicationStatusResourceArrayOutput values.
// You can construct a concrete instance of `GetApplicationStatusResourceArrayInput` via:
//
//	GetApplicationStatusResourceArray{ GetApplicationStatusResourceArgs{...} }
type GetApplicationStatusResourceArrayInput interface {
	pulumi.Input

	ToGetApplicationStatusResourceArrayOutput() GetApplicationStatusResourceArrayOutput
	ToGetApplicationStatusResourceArrayOutputWithContext(context.Context) GetApplicationStatusResourceArrayOutput
}

type GetApplicationStatusResourceArray []GetApplicationStatusResourceInput

func (GetApplicationStatusResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationStatusResource)(nil)).Elem()
}

func (i GetApplicationStatusResourceArray) ToGetApplicationStatusResourceArrayOutput() GetApplicationStatusResourceArrayOutput {
	return i.ToGetApplicationStatusResourceArrayOutputWithContext(context.Background())
}

func (i GetApplicationStatusResourceArray) ToGetApplicationStatusResourceArrayOutputWithContext(ctx context.Context) GetApplicationStatusResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusResourceArrayOutput)
}

type GetApplicationStatusResourceOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusResource)(nil)).Elem()
}

func (o GetApplicationStatusResourceOutput) ToGetApplicationStatusResourceOutput() GetApplicationStatusResourceOutput {
	return o
}

func (o GetApplicationStatusResourceOutput) ToGetApplicationStatusResourceOutputWithContext(ctx context.Context) GetApplicationStatusResourceOutput {
	return o
}

// The Kubernetes resource Group.
func (o GetApplicationStatusResourceOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) string { return v.Group }).(pulumi.StringOutput)
}

// Resource health status.
func (o GetApplicationStatusResourceOutput) Health() GetApplicationStatusResourceHealthOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) GetApplicationStatusResourceHealth { return v.Health }).(GetApplicationStatusResourceHealthOutput)
}

// Indicates whether or not this resource has a hook annotation.
func (o GetApplicationStatusResourceOutput) Hook() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) bool { return v.Hook }).(pulumi.BoolOutput)
}

// The Kubernetes resource Kind.
func (o GetApplicationStatusResourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) string { return v.Kind }).(pulumi.StringOutput)
}

// The Kubernetes resource Name.
func (o GetApplicationStatusResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) string { return v.Name }).(pulumi.StringOutput)
}

// The Kubernetes resource Namespace.
func (o GetApplicationStatusResourceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) string { return v.Namespace }).(pulumi.StringOutput)
}

// Indicates if the resources requires pruning or not.
func (o GetApplicationStatusResourceOutput) RequiresPruning() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) bool { return v.RequiresPruning }).(pulumi.BoolOutput)
}

// Resource sync status.
func (o GetApplicationStatusResourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) string { return v.Status }).(pulumi.StringOutput)
}

// Sync wave.
func (o GetApplicationStatusResourceOutput) SyncWave() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) int { return v.SyncWave }).(pulumi.IntOutput)
}

// The Kubernetes resource Version.
func (o GetApplicationStatusResourceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusResource) string { return v.Version }).(pulumi.StringOutput)
}

type GetApplicationStatusResourceArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationStatusResource)(nil)).Elem()
}

func (o GetApplicationStatusResourceArrayOutput) ToGetApplicationStatusResourceArrayOutput() GetApplicationStatusResourceArrayOutput {
	return o
}

func (o GetApplicationStatusResourceArrayOutput) ToGetApplicationStatusResourceArrayOutputWithContext(ctx context.Context) GetApplicationStatusResourceArrayOutput {
	return o
}

func (o GetApplicationStatusResourceArrayOutput) Index(i pulumi.IntInput) GetApplicationStatusResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationStatusResource {
		return vs[0].([]GetApplicationStatusResource)[vs[1].(int)]
	}).(GetApplicationStatusResourceOutput)
}

type GetApplicationStatusResourceHealth struct {
	// Human-readable informational message describing the health status.
	Message string `pulumi:"message"`
	// Status code of the application or resource.
	Status string `pulumi:"status"`
}

// GetApplicationStatusResourceHealthInput is an input type that accepts GetApplicationStatusResourceHealthArgs and GetApplicationStatusResourceHealthOutput values.
// You can construct a concrete instance of `GetApplicationStatusResourceHealthInput` via:
//
//	GetApplicationStatusResourceHealthArgs{...}
type GetApplicationStatusResourceHealthInput interface {
	pulumi.Input

	ToGetApplicationStatusResourceHealthOutput() GetApplicationStatusResourceHealthOutput
	ToGetApplicationStatusResourceHealthOutputWithContext(context.Context) GetApplicationStatusResourceHealthOutput
}

type GetApplicationStatusResourceHealthArgs struct {
	// Human-readable informational message describing the health status.
	Message pulumi.StringInput `pulumi:"message"`
	// Status code of the application or resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetApplicationStatusResourceHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusResourceHealth)(nil)).Elem()
}

func (i GetApplicationStatusResourceHealthArgs) ToGetApplicationStatusResourceHealthOutput() GetApplicationStatusResourceHealthOutput {
	return i.ToGetApplicationStatusResourceHealthOutputWithContext(context.Background())
}

func (i GetApplicationStatusResourceHealthArgs) ToGetApplicationStatusResourceHealthOutputWithContext(ctx context.Context) GetApplicationStatusResourceHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusResourceHealthOutput)
}

type GetApplicationStatusResourceHealthOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusResourceHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusResourceHealth)(nil)).Elem()
}

func (o GetApplicationStatusResourceHealthOutput) ToGetApplicationStatusResourceHealthOutput() GetApplicationStatusResourceHealthOutput {
	return o
}

func (o GetApplicationStatusResourceHealthOutput) ToGetApplicationStatusResourceHealthOutputWithContext(ctx context.Context) GetApplicationStatusResourceHealthOutput {
	return o
}

// Human-readable informational message describing the health status.
func (o GetApplicationStatusResourceHealthOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusResourceHealth) string { return v.Message }).(pulumi.StringOutput)
}

// Status code of the application or resource.
func (o GetApplicationStatusResourceHealthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusResourceHealth) string { return v.Status }).(pulumi.StringOutput)
}

type GetApplicationStatusSummary struct {
	// All external URLs of application child resources.
	ExternalUrls []string `pulumi:"externalUrls"`
	// All images of application child resources.
	Images []string `pulumi:"images"`
}

// GetApplicationStatusSummaryInput is an input type that accepts GetApplicationStatusSummaryArgs and GetApplicationStatusSummaryOutput values.
// You can construct a concrete instance of `GetApplicationStatusSummaryInput` via:
//
//	GetApplicationStatusSummaryArgs{...}
type GetApplicationStatusSummaryInput interface {
	pulumi.Input

	ToGetApplicationStatusSummaryOutput() GetApplicationStatusSummaryOutput
	ToGetApplicationStatusSummaryOutputWithContext(context.Context) GetApplicationStatusSummaryOutput
}

type GetApplicationStatusSummaryArgs struct {
	// All external URLs of application child resources.
	ExternalUrls pulumi.StringArrayInput `pulumi:"externalUrls"`
	// All images of application child resources.
	Images pulumi.StringArrayInput `pulumi:"images"`
}

func (GetApplicationStatusSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusSummary)(nil)).Elem()
}

func (i GetApplicationStatusSummaryArgs) ToGetApplicationStatusSummaryOutput() GetApplicationStatusSummaryOutput {
	return i.ToGetApplicationStatusSummaryOutputWithContext(context.Background())
}

func (i GetApplicationStatusSummaryArgs) ToGetApplicationStatusSummaryOutputWithContext(ctx context.Context) GetApplicationStatusSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusSummaryOutput)
}

type GetApplicationStatusSummaryOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusSummary)(nil)).Elem()
}

func (o GetApplicationStatusSummaryOutput) ToGetApplicationStatusSummaryOutput() GetApplicationStatusSummaryOutput {
	return o
}

func (o GetApplicationStatusSummaryOutput) ToGetApplicationStatusSummaryOutputWithContext(ctx context.Context) GetApplicationStatusSummaryOutput {
	return o
}

// All external URLs of application child resources.
func (o GetApplicationStatusSummaryOutput) ExternalUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationStatusSummary) []string { return v.ExternalUrls }).(pulumi.StringArrayOutput)
}

// All images of application child resources.
func (o GetApplicationStatusSummaryOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationStatusSummary) []string { return v.Images }).(pulumi.StringArrayOutput)
}

type GetApplicationStatusSync struct {
	// Information about the revision(s) the comparison has been performed to.
	Revisions []string `pulumi:"revisions"`
	// Sync state of the comparison.
	Status string `pulumi:"status"`
}

// GetApplicationStatusSyncInput is an input type that accepts GetApplicationStatusSyncArgs and GetApplicationStatusSyncOutput values.
// You can construct a concrete instance of `GetApplicationStatusSyncInput` via:
//
//	GetApplicationStatusSyncArgs{...}
type GetApplicationStatusSyncInput interface {
	pulumi.Input

	ToGetApplicationStatusSyncOutput() GetApplicationStatusSyncOutput
	ToGetApplicationStatusSyncOutputWithContext(context.Context) GetApplicationStatusSyncOutput
}

type GetApplicationStatusSyncArgs struct {
	// Information about the revision(s) the comparison has been performed to.
	Revisions pulumi.StringArrayInput `pulumi:"revisions"`
	// Sync state of the comparison.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetApplicationStatusSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusSync)(nil)).Elem()
}

func (i GetApplicationStatusSyncArgs) ToGetApplicationStatusSyncOutput() GetApplicationStatusSyncOutput {
	return i.ToGetApplicationStatusSyncOutputWithContext(context.Background())
}

func (i GetApplicationStatusSyncArgs) ToGetApplicationStatusSyncOutputWithContext(ctx context.Context) GetApplicationStatusSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStatusSyncOutput)
}

type GetApplicationStatusSyncOutput struct{ *pulumi.OutputState }

func (GetApplicationStatusSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStatusSync)(nil)).Elem()
}

func (o GetApplicationStatusSyncOutput) ToGetApplicationStatusSyncOutput() GetApplicationStatusSyncOutput {
	return o
}

func (o GetApplicationStatusSyncOutput) ToGetApplicationStatusSyncOutputWithContext(ctx context.Context) GetApplicationStatusSyncOutput {
	return o
}

// Information about the revision(s) the comparison has been performed to.
func (o GetApplicationStatusSyncOutput) Revisions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationStatusSync) []string { return v.Revisions }).(pulumi.StringArrayOutput)
}

// Sync state of the comparison.
func (o GetApplicationStatusSyncOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStatusSync) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesInput)(nil)).Elem(), ProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesPtrInput)(nil)).Elem(), ProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesExecInput)(nil)).Elem(), ProviderKubernetesExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesExecPtrInput)(nil)).Elem(), ProviderKubernetesExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationMetadataInput)(nil)).Elem(), GetApplicationMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecInput)(nil)).Elem(), GetApplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecDestinationInput)(nil)).Elem(), GetApplicationSpecDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecIgnoreDifferenceInput)(nil)).Elem(), GetApplicationSpecIgnoreDifferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecIgnoreDifferenceArrayInput)(nil)).Elem(), GetApplicationSpecIgnoreDifferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecInfoInput)(nil)).Elem(), GetApplicationSpecInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecInfoArrayInput)(nil)).Elem(), GetApplicationSpecInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceInput)(nil)).Elem(), GetApplicationSpecSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceArrayInput)(nil)).Elem(), GetApplicationSpecSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceDirectoryInput)(nil)).Elem(), GetApplicationSpecSourceDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetInput)(nil)).Elem(), GetApplicationSpecSourceDirectoryJsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetExtVarInput)(nil)).Elem(), GetApplicationSpecSourceDirectoryJsonnetExtVarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetExtVarArrayInput)(nil)).Elem(), GetApplicationSpecSourceDirectoryJsonnetExtVarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetTlaInput)(nil)).Elem(), GetApplicationSpecSourceDirectoryJsonnetTlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceDirectoryJsonnetTlaArrayInput)(nil)).Elem(), GetApplicationSpecSourceDirectoryJsonnetTlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceHelmInput)(nil)).Elem(), GetApplicationSpecSourceHelmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceHelmFileParameterInput)(nil)).Elem(), GetApplicationSpecSourceHelmFileParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceHelmFileParameterArrayInput)(nil)).Elem(), GetApplicationSpecSourceHelmFileParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceHelmParameterInput)(nil)).Elem(), GetApplicationSpecSourceHelmParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceHelmParameterArrayInput)(nil)).Elem(), GetApplicationSpecSourceHelmParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourceKustomizeInput)(nil)).Elem(), GetApplicationSpecSourceKustomizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourcePluginInput)(nil)).Elem(), GetApplicationSpecSourcePluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourcePluginEnvInput)(nil)).Elem(), GetApplicationSpecSourcePluginEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourcePluginEnvArrayInput)(nil)).Elem(), GetApplicationSpecSourcePluginEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourcePluginParameterInput)(nil)).Elem(), GetApplicationSpecSourcePluginParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSourcePluginParameterArrayInput)(nil)).Elem(), GetApplicationSpecSourcePluginParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSyncPolicyInput)(nil)).Elem(), GetApplicationSpecSyncPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSyncPolicyAutomatedInput)(nil)).Elem(), GetApplicationSpecSyncPolicyAutomatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSyncPolicyRetryInput)(nil)).Elem(), GetApplicationSpecSyncPolicyRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSpecSyncPolicyRetryBackoffInput)(nil)).Elem(), GetApplicationSpecSyncPolicyRetryBackoffArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusInput)(nil)).Elem(), GetApplicationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusConditionInput)(nil)).Elem(), GetApplicationStatusConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusConditionArrayInput)(nil)).Elem(), GetApplicationStatusConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusHealthInput)(nil)).Elem(), GetApplicationStatusHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusOperationStateInput)(nil)).Elem(), GetApplicationStatusOperationStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusResourceInput)(nil)).Elem(), GetApplicationStatusResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusResourceArrayInput)(nil)).Elem(), GetApplicationStatusResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusResourceHealthInput)(nil)).Elem(), GetApplicationStatusResourceHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusSummaryInput)(nil)).Elem(), GetApplicationStatusSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStatusSyncInput)(nil)).Elem(), GetApplicationStatusSyncArgs{})
	pulumi.RegisterOutputType(ProviderKubernetesOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesPtrOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesExecOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesExecPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationMetadataOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecDestinationOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecIgnoreDifferenceOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecIgnoreDifferenceArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecInfoOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecInfoArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceDirectoryOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceDirectoryJsonnetExtVarOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceDirectoryJsonnetTlaOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceDirectoryJsonnetTlaArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceHelmOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceHelmFileParameterOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceHelmFileParameterArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceHelmParameterOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceHelmParameterArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourceKustomizeOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourcePluginOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourcePluginParameterOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSourcePluginParameterArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSyncPolicyOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSyncPolicyAutomatedOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSyncPolicyRetryOutput{})
	pulumi.RegisterOutputType(GetApplicationSpecSyncPolicyRetryBackoffOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusConditionOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusConditionArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusHealthOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusOperationStateOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusResourceOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusResourceArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusResourceHealthOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusSummaryOutput{})
	pulumi.RegisterOutputType(GetApplicationStatusSyncOutput{})
}
