// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages [GPG keys](https://argo-cd.readthedocs.io/en/stable/user-guide/gpg-verification/) within ArgoCD.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as argocd from "@pulumi/argocd";
 *
 * const _this = new argocd.GpgKey("this", {publicKey: `-----BEGIN PGP PUBLIC KEY BLOCK-----
 *
 * mQINBGSJdlcBEACnza+KvWLyKWUHJPhgs//HRL0EEmA/EcFKioBlrgPNYf/O7hNg
 * KT3NDaNrD26pr+bOb4mfaqNNS9no8b9EP3C7Co3Wf2d4xpJ5/hlpIm3V652S5daZ
 * I7ylVT8QOrhaqEnHH2hEcOfDaqjrYfrx3qiI8v7DmV6jfGi1tDUUgfJwiOyZk4q1
 * jiPo5k4+XNp9mCtUAGyidLFcUqQ9XbHKgBwgAoxtIKNSbdPCGhsjgTHHhzswMH/Z
 * DhhtcraqrfOhoP9lI4/zyCS+B9OfUy7BS/1SqWKIgdsjFIR+zHIOI69lh77+ZAVE
 * MVYJBdFke5/g/tTPaQGuBqaIJ3d/Mi/ZlbTsoBcq5qam73uh7fcgBV5la6NeuNcR
 * tvKMVl4DlnkJS8LBtElLEeHEylTCdNltrUFwshDKDBtq6ilTKCK14R6g4lkn8VcE
 * 9xx7Mhdh77tp66FRZ6ge1E8EUEFwEeFhp240KRyaA5U1/kAarn8083zZ7d4+QObp
 * L4KMqgrwLaxyPLgu0J/f946qLewV7XsbZRXE1jQa9Z7W5TEoJwjcC79DXe1wChc6
 * cBfCtluDsnklwvldpKTEZU0q/hKE6Zt7NjLUyExV+5guoHllxoVxx7sh+jtKm/J+
 * 5gh+B3xOTDxRV2XYIx1TM6U1iLxAqchzFec8dfkuTbs/5f++PrddvZfiUQARAQAB
 * tD1BcmdvQ0QgVGVycmFmb3JtIFByb3ZpZGVyIDxmYWtldXNlckB1c2Vycy5ub3Jl
 * cGx5LmdpdGh1Yi5jb20+iQJOBBMBCgA4FiEEvK9bNlncXDhFAk6kmtkpVUAdOI0F
 * AmSJdlcCGwMFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQmtkpVUAdOI2FdA//
 * YuFYsX6SUVgI4l68ZHE34jLTWU5R2ujB6luErcguAlLyDtrD3melva3V/ETc69/1
 * 5o7Ayn3a7uz5lCEvUSLsCN+V2o3EjrA81pt8Zs+Z9WYeZE5F5DnKzq81PObdASB7
 * Po2X0qLqqKIhpQxc/E7m26xmePCf82H36gtvPiEVmVA5yduk1lLG3aZtNIRCa4VK
 * gmDjR8Se+OZeAw7JQCOeJB9/Y8oQ8nVkj1SWNIICaUwIXHtrj7r1z6XTDAEkGeBg
 * HXW8IEhZDE1Nq3vQtZvgwftEoPT/Ff+8DwvL1JUov2ObQDolallzKaiiVfGZhPJZ
 * 4PMtEPEmSL9QWJAG5jiBVC3BdVZtXBNkC1HqTCXwZc/wzp5O9MmMXmCrUFr4FfHu
 * IZ560MNpp/SrtUrOahLmvuG0B+Ze96e2nm5ap5wkCDaQouOIqM7Lj+FGq64cu2B/
 * oSsl7joBZQUYXv8meNOQssm6jArRLG2oFoiEdRqzd2/RjvvJliLN9OCNvV43f38h
 * 8Ep8RDi9RiHhSKvwrvDD9x/JRm6zQUetjrctmjdIYp8k129LrD0Qr9ULXfphZdrv
 * xga7/lyQLmukLu7Mxwp+ss2bY/wjT8mlT5P55kBpXXyYILhLsUESCHG6D8/Ov+vv
 * OoZS+BSfe/0vc1aTfDKxj5wAx27a6z5o25X27feEl3U=
 * =kqkH
 * -----END PGP PUBLIC KEY BLOCK-----
 * `});
 * ```
 *
 * ## Import
 *
 * GPG Keys can be imported using the key ID.
 *
 * Example:
 *
 * ```sh
 * $ pulumi import argocd:index/gpgKey:GpgKey this 9AD92955401D388D
 * ```
 */
export class GpgKey extends pulumi.CustomResource {
    /**
     * Get an existing GpgKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GpgKeyState, opts?: pulumi.CustomResourceOptions): GpgKey {
        return new GpgKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'argocd:index/gpgKey:GpgKey';

    /**
     * Returns true if the given object is an instance of GpgKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GpgKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GpgKey.__pulumiType;
    }

    /**
     * Fingerprint is the fingerprint of the key
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * Owner holds the owner identification, e.g. a name and e-mail address
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * Raw key data of the GPG key to create
     */
    public readonly publicKey!: pulumi.Output<string>;
    /**
     * SubType holds the key's sub type (e.g. rsa4096)
     */
    public /*out*/ readonly subType!: pulumi.Output<string>;
    /**
     * Trust holds the level of trust assigned to this key
     */
    public /*out*/ readonly trust!: pulumi.Output<string>;

    /**
     * Create a GpgKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GpgKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GpgKeyArgs | GpgKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GpgKeyState | undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["subType"] = state ? state.subType : undefined;
            resourceInputs["trust"] = state ? state.trust : undefined;
        } else {
            const args = argsOrState as GpgKeyArgs | undefined;
            if ((!args || args.publicKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicKey'");
            }
            resourceInputs["publicKey"] = args ? args.publicKey : undefined;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["subType"] = undefined /*out*/;
            resourceInputs["trust"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GpgKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GpgKey resources.
 */
export interface GpgKeyState {
    /**
     * Fingerprint is the fingerprint of the key
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * Owner holds the owner identification, e.g. a name and e-mail address
     */
    owner?: pulumi.Input<string>;
    /**
     * Raw key data of the GPG key to create
     */
    publicKey?: pulumi.Input<string>;
    /**
     * SubType holds the key's sub type (e.g. rsa4096)
     */
    subType?: pulumi.Input<string>;
    /**
     * Trust holds the level of trust assigned to this key
     */
    trust?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GpgKey resource.
 */
export interface GpgKeyArgs {
    /**
     * Raw key data of the GPG key to create
     */
    publicKey: pulumi.Input<string>;
}
