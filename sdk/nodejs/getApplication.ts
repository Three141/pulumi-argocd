// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Reads an existing ArgoCD application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as argocd from "@pulumi/argocd";
 *
 * const foo = argocd.getApplication({
 *     metadata: {
 *         name: "foo",
 *         namespace: "argocd",
 *     },
 * });
 * ```
 */
export function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("argocd:index/getApplication:getApplication", {
        "metadata": args.metadata,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    /**
     * Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
     */
    metadata: inputs.GetApplicationMetadata;
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    /**
     * ArgoCD application identifier
     */
    readonly id: string;
    /**
     * Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
     */
    readonly metadata: outputs.GetApplicationMetadata;
    /**
     * The application specification.
     */
    readonly spec: outputs.GetApplicationSpec;
    /**
     * Status information for the application.
     */
    readonly status: outputs.GetApplicationStatus;
}
/**
 * Reads an existing ArgoCD application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as argocd from "@pulumi/argocd";
 *
 * const foo = argocd.getApplication({
 *     metadata: {
 *         name: "foo",
 *         namespace: "argocd",
 *     },
 * });
 * ```
 */
export function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("argocd:index/getApplication:getApplication", {
        "metadata": args.metadata,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationOutputArgs {
    /**
     * Standard Kubernetes object metadata. For more info see the [Kubernetes reference](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata).
     */
    metadata: pulumi.Input<inputs.GetApplicationMetadataArgs>;
}
